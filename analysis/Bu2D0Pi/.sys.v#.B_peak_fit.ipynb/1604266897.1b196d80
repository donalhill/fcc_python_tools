{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Create $D^0$ candidates then $B$ candidates, and fit the $B$ mass peak\n",
    "\n",
    "Make use of exclusive $B^\\pm \\to D^0 \\pi^\\pm$ sample created using EvtGen"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sys,os\n",
    "import uproot4 as uproot\n",
    "import awkward1 as ak\n",
    "import json\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from fcc_python_tools.locations import loc\n",
    "from fcc_python_tools import kinematics_flat\n",
    "from particle import literals as lp\n",
    "from fcc_python_tools import plotting\n",
    "import tensorflow as tf\n",
    "import zfit\n",
    "import random\n",
    "\n",
    "from matplotlib import rc\n",
    "rc('font',**{'family':'serif','serif':['Roman']})\n",
    "rc('text', usetex=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Load MC from `FCCAnalyses` output, where recontructed particles are stored in `rec_part` branches. Use `zip` function in `awkward array` to group all of the `rec_part` branches together."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "mode = \"Bu2D0Pi\"\n",
    "path = loc.FLAT + f'/p8_ee_Zbb_ecm91_EvtGen_{mode}.root'\n",
    "file = uproot.open(path)\n",
    "tree = file['events']\n",
    "\n",
    "events = tree.arrays(library=\"ak\", how=\"zip\")\n",
    "\n",
    "#Number of events to keep and analyse\n",
    "n_events = 10000\n",
    "\n",
    "#Container for the reco particles\n",
    "p_c = 'rec_part'\n",
    "p = events[p_c][:n_events]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Calculate the total momentum for the particles"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "p[\"p\"] = kinematics_flat.calc_p(p)\n",
    "p_cut = p[\"p\"] > 1.\n",
    "p = p[p_cut]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Make pion and kaon samples based on track masses, then combine them into $D^0 \\to K \\pi$ candidates. Apply a cut around the $D^0$ mass."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "pi_cut = abs(p[\"mass\"] - lp.pi_plus.mass/1000.) < 1e-4\n",
    "pi = p[pi_cut]\n",
    "\n",
    "k_cut = abs(p[\"mass\"] - lp.K_plus.mass/1000.) < 1e-4\n",
    "k = p[k_cut]\n",
    "\n",
    "D = ak.cartesian({\"k\": k, \"pi\": pi})\n",
    "D_cut = np.sign(D[\"k\",\"charge\"]) != np.sign(D[\"pi\",\"charge\"])\n",
    "D = D[D_cut]\n",
    "\n",
    "PDG_K_m = lp.K_plus.mass/1000.\n",
    "PDG_pi_m = lp.pi_plus.mass/1000.\n",
    "D[\"mass\"] = kinematics_flat.mass([D[\"k\"], D[\"pi\"]], [PDG_K_m, PDG_pi_m])\n",
    "\n",
    "PDG_D_m = lp.D_0.mass/1000.\n",
    "D_window = 0.05\n",
    "D_cut = abs(D[\"mass\"] - PDG_D_m) < D_window\n",
    "D = D[D_cut]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "B = ak.cartesian({\"D_k\": D[\"k\"], \"D_pi\": D[\"pi\"], \"pi\": pi})\n",
    "B_cut = np.sign(B[\"D_k\",\"charge\"]) == np.sign(B[\"pi\",\"charge\"])\n",
    "B = B[B_cut]\n",
    "B[\"mass\"] = kinematics_flat.mass([B[\"D_k\"], B[\"D_pi\"], B[\"pi\"]], [PDG_K_m, PDG_pi_m, PDG_pi_m])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "low = 5.22\n",
    "high = 5.34\n",
    "B_cut = np.logical_and(B[\"mass\"] > low, B[\"mass\"] < high)\n",
    "B = B[B_cut]\n",
    "\n",
    "plotting.errorbar_hist(B,\"mass\",\"B\",\"$m([K^\\pm \\pi^\\mp]_D \\pi^\\pm)$\",\"GeV/$c^2$\",low,high,100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "obs = zfit.Space('mB', limits=(low, high))\n",
    "\n",
    "#Signal PDF\n",
    "rand = random.randint(0,999)\n",
    "B_mu = zfit.Parameter(f\"B_mu_{rand}\", 5.279, low, high)\n",
    "B_sigma = zfit.Parameter(f\"B_sigma_{rand}\", 0.0055, 0., 0.1)\n",
    "B_alphaL = zfit.Parameter(f\"B_alphaL_{rand}\", 0.2, 0., 5.)\n",
    "B_nL = zfit.Parameter(f\"B_nL_{rand}\", 100., 0., 200.)\n",
    "B_alphaR = zfit.Parameter(f\"B_alphaR_{rand}\", -0.2, -5., 0.)\n",
    "B_nR = zfit.Parameter(f\"B_nR_{rand}\", 100., 0., 200.)\n",
    "frac = zfit.Parameter(f\"frac_{rand}\", 0.5, 0., 1.)\n",
    "\n",
    "n_sig = zfit.Parameter(f\"n_sig_{rand}\",8000., 0., 20000.)\n",
    "\n",
    "pdf_sigL = zfit.pdf.CrystalBall(obs=obs, mu=B_mu, sigma=B_sigma, alpha=B_alphaL, n=B_nL)\n",
    "pdf_sigR = zfit.pdf.CrystalBall(obs=obs, mu=B_mu, sigma=B_sigma, alpha=B_alphaR, n=B_nR)\n",
    "pdf_sig = zfit.pdf.SumPDF([pdf_sigL, pdf_sigR], frac).create_extended(n_sig)\n",
    "\n",
    "#Background PDF\n",
    "comb = zfit.Parameter(f\"comb_{rand}\", -0.1, -1, 1.)\n",
    "\n",
    "n_bkg = zfit.Parameter(f\"n_bkg_{rand}\", 1000., 0., 10000.)\n",
    "\n",
    "pdf_bkg = zfit.pdf.Chebyshev(obs=obs, coeffs=[comb]).create_extended(n_bkg)\n",
    "\n",
    "#Total PDF\n",
    "pdf = zfit.pdf.SumPDF([pdf_sig, pdf_bkg])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_np = ak.to_numpy(ak.flatten(B[\"mass\"]))\n",
    "data = zfit.Data.from_numpy(obs=obs, array=data_np)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "┌──────────────────────────────────┬──────────────────────────────────────┐\n",
      "│ FCN = -8.712e+04                 │       Ncalls = 965 (965 total)       │\n",
      "│ EDM = 5.88e-06 (Goal: 1e-05)     │               up = 0.5               │\n",
      "├───────────────┬──────────────────┼──────────────────────────────────────┤\n",
      "│ Valid Minimum │ Valid Parameters │        No Parameters at limit        │\n",
      "├───────────────┴──────────────────┼──────────────────────────────────────┤\n",
      "│ Below EDM threshold (goal x 10)  │           Below call limit           │\n",
      "├───────────────┬──────────────────┼───────────┬─────────────┬────────────┤\n",
      "│   Hesse ok    │  Has Covariance  │ Accurate  │  Pos. def.  │ Not forced │\n",
      "└───────────────┴──────────────────┴───────────┴─────────────┴────────────┘\n",
      "m(B) fit function minimum: -87122.43754647025\n",
      "m(B) fit converged: True\n",
      "m(B) fit full minimizer information: {'n_eval': 965, 'n_iter': 965, 'original': FMin(fval=-87122.43754647025, edm=5.87895049046159e-06, tolerance=0.01, nfcn=965, ncalls=965, up=0.5, is_valid=True, has_valid_parameters=True, has_accurate_covar=True, has_posdef_covar=True, has_made_posdef_covar=False, hesse_failed=False, has_covariance=True, is_above_max_edm=False, has_reached_call_limit=False, has_parameters_at_limit=False)}\n",
      "name            value         minuit_minos    at limit\n",
      "-----------  --------  -------------------  ----------\n",
      "n_sig_16         7649  -     97   +     98       False\n",
      "n_bkg_16        222.2  -     45   +     48       False\n",
      "frac_16        0.5389  -  0.039   +  0.039       False\n",
      "B_alphaL_16    0.6178  -  0.039   +  0.038       False\n",
      "B_mu_16         5.279  -0.00012   +0.00012       False\n",
      "B_nL_16         101.4  -   0.37   +   0.37       False\n",
      "B_sigma_16   0.005601  -0.00017   +0.00018       False\n",
      "B_alphaR_16   -0.5453  -  0.042   +  0.043       False\n",
      "B_nR_16          42.8  -     26   +    3.5       False\n",
      "comb_16      -0.03983  -   0.26   +   0.26       False\n"
     ]
    }
   ],
   "source": [
    "nll = zfit.loss.ExtendedUnbinnedNLL(model=pdf, data=data)\n",
    "minimizer = zfit.minimize.Minuit(tolerance=1e-5)\n",
    "result = minimizer.minimize(nll)\n",
    "param_errors, _ = result.errors(method=\"minuit_minos\")\n",
    "\n",
    "print(\"m(B) fit function minimum:\", result.fmin)\n",
    "print(\"m(B) fit converged:\", result.converged)\n",
    "print(\"m(B) fit full minimizer information:\", result.info)\n",
    "\n",
    "params = result.params\n",
    "print(params)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/bin/start_ipykernel.py:2: UserWarning: The function <function Space.limits at 0x7f01714390e0> may does not return the actual area/limits but rather the rectangular limits. <zfit Space obs=('mB',), axes=None, limits=(array([[5.22]]), array([[5.34]]))> can also have functional limits that are arbitrarily defined and lay inside the rect_limits. To test if a value is inside, use `inside` or `filter`.\n",
      "  if __name__ == '__main__':\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAjgAAAI4CAYAAABndZP2AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjAsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+17YcXAAAgAElEQVR4nOzda3Bk533f+e+/cb80uhuXwdwHM7yJIjUcUlKcsSkOKNpJ7SaWSHt3k61IIqndSrYqSiTKVftKtkVSSTZVa1GyUltZp2zxYu+6yrEpiU5tlWNaIMfWRDYlDoe0ZZmXuQ/u6CvQDTTQz744p0kQBGa6gdN9uhu/T9XUEN1Pn/PnCzZ/eM7z/B9zziEiIiLSSiJhFyAiIiISNAUcERERaTkKOCIiItJyFHBERESk5SjgiIiISMtpD7uAZjY8POzGxsbCLkNERGTX+tGPfjTnnBvZ+LoCzg6MjY3xyiuvhF2GiIjIrmVmFzd7XY+oREREpOUo4IiIiEjLUcARERGRlqOAIyIiIi1HAUdERERajgKOiIiItBwFHBEREWk5CjgiIiLSchRwREREpOUo4IiIiEjLUcARERGRlqOAIyIiIi1HAUdERERajgKOiIiItBwFHBEREWk5CjgiIiLSchRwREREpOUo4IiIiEjLUcARERGRlqOAIyIiIi1HAUdERERajgKOiIiItBwFHBEREWk5CjgiIiLSchRwREREpOUo4IiIiEjLUcARERGRlqOAIyIiIi1HAUdERERajgKOiIiItBwFHBEREWk5CjgiIiLSchRwREREpOUo4IiIiEjLUcARERGRlqOAIyIiIi1HAUdERERajgKOiIiItBwFHBEREWk5CjgiIiLSchRwREREpOUo4IiIiEjLUcARERGRlqOAIyIiIi1HAUdEdoXx8XHGx8fDLkNE6kQBR0RERFqOAo6IiIi0HAUcERERaTkKOCIiItJyFHBERESk5SjgiIiISMtRwBEREZGWo4AjIiIiLUcBR0RERFqOAo6IiIi0HAUcERERaTkKOCIiItJyFHBEZFdIp9NcunSJM2fOhF2KiNSBAo6ItLwzZ85w7tw5zp8/zwMPPKCQI7ILKOCISMubmJigVCoBsLKywsTERLgFiUjNKeCISMsbHx8nEvG+7jo7OxkfHw+3IBGpOQUcEWl5J0+e5Pjx4xw9epQXX3yRkydPhl2SiNRYe9gFiIjUQywWIxaLKdyI7BKawREREZGWo4AjIiIiLUcBR0RERFqOAo6IiIi0HAUcEdk1isV2Xn99mlSqEHYpIlJj2kUlIrtCMhlndnYP/+E//CVtbRH+6T+9k/vuOxJ2WSJSI5rBEZGW98YbM8zO7nn357W1Er/3e+f4u7+bD7EqEaklBRwRaWmlkuMP/uCv6XdrPLF2hV/5r/8Xn3rlj+ksLvP7v/8GpZILu0QRqQEFHBFpaT/84RWmJrP827Ur3FvKEnvg73Hb1Z/yqR9+j6tX0vz4x5NhlygiNaCAIyIt7fTpS3z48t9wt1viuX0RRv/T4wx+9V9ybOY8t177O06fvhh2iSJSAwo4ItKypqdzvPPmHD/3k7/gnfZ2fpDwXk/8rw+xtP8An/jr0/ztT2aZnV1kfHxch3CKtBAFHBFpWX/1V9cYm7lAYjHF7f/+f+f7L70EgLW3E/vf/ieGcgscmrvM2bNTIVcqIkFTwBGRlvX669PceekNCt29HPinP/++9w48/N+z3NnNXRde47XXpkOqUERqRQFHRFpSJrPM1bdmuOXam+T+/t/DOjve935bbzfZj3+Umybf5p2/m2VtrS2kSkWkFhRwRKQl/c3fzHJk5iLtpTWGfvmBTcckPnWKrtUVDs5cYmmpp84VikgtKeCISEv66U/nODb9DivtnRx98Gc3HXPkfzhFsa2dWybfJJ/vrXOFIlJLCjgi0pLeenOeY1PvsHDTrbR1d246pmugl/mxmzkyc5GlJQUckVbSNAHHzA6b2X1mdjissSLSHDKZZZYvXGMgn8V+5u7rjrWPfoSh3ALRZWN1VetwRFpFwwccMztuZs8DjwPjwONm9qqZHd9k7IA/9hH/pUfM7HkzG9jJWBFpLm++Oc/BuSsAjPzCx647dvAB7/0Tbonl5e6a1yYi9dHQp4n7syrfBD7tnMtseP27Zvawc+7cuo+8BKx/7WU/CL0EbPw1rpqxItLgyk36JiYmuHAhxaG5y+Q7urn1/o9c93OHfv4eLrZ3cqK0xNmCAo5Iq2j0GZzHgKfWhxsA59wl4Cn/fQDM7HPAhQ2BB//nC/77VY8VkeZz6VKag/NXWDhwhM6ujuuO7RvoZm7vIT5cylNQwBFpGY0ecE5c570LwNi6nx8FXt1i7Kv++9sZKyJNxDnH1FvTDOaSFD90S0WfKd50lGMsU8pvvhhZRJpPowecC3hrbjZbADwOfH/Dz2e3uM5Z//3tjBWRJjI/nyc6eRWA3ns+VNFnuu/+EOeKGUif5U/+ZKKG1YlIvTR6wPl1vFma1zY8YjoO3O+ce8L/uRyAUltcJ1UeV83YnZUuImG4dCnNaMo7emHPvddff1N2JVHic+k3OJ87y6c+9d9x5syZWpYoInXQ0AHHX2vzaf/HZ/xdTv8aeHDd6/D+R1XXM1blWBFpMuWAk+mJcvB4Zb+n/HTubVYo4YBiscjExERNaxSR2mvogAPgnHsZuAtvZuVBvO3iExsXHouIgBdw9qamSI8eoKurso2iv/ALD9BOhAjQ1tb+7o4sEWleDR9w/MdRjwNHgC/6L79kZk+FVM8/N7NXzOyV2dnZMEoQkeuYfGeWwewCazcfrfgzJ0+e5HMjP8MXe4/w2X/y7zh58mQNKxSRemjogFMON865R51zGefcb+LN5pwFvmRmv1bvmpxzv+Wc+5hz7mMjIyP1vr2IXMfaWoSeK5cxoPMjt1b1WTcwyL/sPcSh5X6KxbXaFCgiddPQAQf4Lu/N2gDeuhzn3N3A08BjfufhrRYMb5SqcqyINJGVlU5GUt7Mauzjle2gKpvqKQEwlJllaioXeG0iUl8NG3D82ZuUv9D4A5xz5V41J9Y17Bvb4nJj/mfOVTO2uopFJGwrK10MZ+dYbu9k9PhYVZ9N9q2ygjGcmePatWxtChSRumnYgAPEufEsytl1Yya4fmiZWPdzNWNFpEmsrHQylJ1nYWCYkZG+qj7b3lXkEp0MZeYVcERaQMMGHH/31ImtDr/0X4+vm2n5NvDQFpd7yH+fbYwVkSaQTqeZmnqTK7Nvs7R3L5GIVfV5M8fFtg6Gs3NMTuoRlUiza9iA4/si3o6p94Uc/+dvsm59jnPuWf+9+zaMvW/9+9WOFZHGd+bMGc6dO8fCwmv8i7m/4q97t7dI+EpHhNhShpmLcwFXKCL11tCniTvnnjWzFF7IOQucB47inVG18SRxgFN4DQHH8R4zjeOdDH5qk8tXM1ZEGtjExASlkrdIuEiJvyklt3Wda10GBeD8ZVZW1ujsbAuwShGpp4YOOADOue8B3/MXHceBp6+z8DgDPOQfszDmj31ip2NFpLGNj48TiURwpRIdRPi5f/APt3WdyZ4SpGEoM8fs7CIHDmz6hFxEmkDDB5yyanY1+QFo0xC0k7Ei0phOnjzJzTefZOzqAo90dnPfP/n0jT+0iYXeNVYjbQxn5piZUcARaWZNE3BERK6no2OUh3v7ORzrZ89o/7au0d5ZJNmfIJFLMjOzGHCFIlJPjb7IWESkIsViB4fdCrmhPXR0bG/tTFtbiWxsiEQuyfS0Ao5IM1PAEZHWsNLBKEXW9o1u6+MTExNMTExQ3DtKfDHF7LR64Yg0MwUcEWkJQ8veF1rkyIEdXccO7aO9tMbShclgChORUCjgiEjTW1oqsr+0CkDPLYd2dK3uWw4D0HZtiuXl1R3XJiLhCGyRsZndibeNe72zzjm1BBWRmpqZWeSAKwIQu2NsR9eK+p9P5JLMzi5x8KB2Uok0o20FHDPrBx4EPonXIG8MSAKvrRsWxztqweE10vs+8B3n3BvbL1dE5INmZxc5wApZIgzfvHdH1xr+0EEKbe3v7qRSwBFpTlUFHDM7CDwB3IUXWp4Hft05d/kGn/sEXvfhJ8zsCPCUc+53t1WxiMgGMzOLHHQrXLVObq/ykM2NRvdGOduX8HdSaQJapFlVHHDM7F/hzdZ8wzl3upqb+ONPA98ysyjwJTP7Q+CLzrkr1VxLRGSjmZlFjrkV/q6ti66unT157+npIBsfIpGc4e/m8wFVKCL1VtEiYzP7OvCqc+6Xqw03Gznnss65J4FHgC/7a3dERLZtbirLXopMtgVzdtTKnj3EFtPMzWgGR6RZ3TDgmNln8R5D/XmQN/aDzpeBo/6jLxGRbVm5NEk7MN1hwVzwwCjtpTXyl6eDuZ6I1N0N53Kdc8/VsgDn3Au1vL6ItLbV1RJtk14Qeehf/YtArtl5ZD8A7uo0zjnMAgpOIlI36oMjIk1tYSHPwGIagP5bd9YDp6z3Jq9ZYF82RTq9HMg1RaS+KnlE1W9m9272GEnrZ0QkbAsLeWJLadYsQvymfYFcM3ab93UXW0wzP78UyDVFpL6uG3D89TeXgN8EzpnZi+uDjnPuDTP7RTP7UY3rFBHZ1Pz8ErGlNJneAYb3bO8U8Y2G9sXJdfcRW0ozr51UIk1py4BjZoeAx4C7nHP3OOcGgceBZ9fP3PhraE7UvFIRkU3MzS0xsJQh0xsjHu8O5JpDQz2ke2N+wNEMjkgzut4MzqeBT69v4uece9k590ng83o8JSKNoPyIqpBI0N4ezLLCrq52FgcSDCxlNIMj0qSu922Q2KpD8brt3Qo5IhKq5HSG/sIia3tGAr3u6p4RBpYy6oUj0qSuF3CeNrN7wVtM7J8/9S7/0dRRM/tILQsUEbme5UtTAET2jwZ6Xds/SpsrqReOSJPaMuD4szcJ/xypc8CXNhlT7mGTrk15IiJbW1srweQMAJ1jweygKus47B3aWe6FIyLN5bqN/pxzL/hnR50Czm4x5nUzu6sWxYmIXE8yWXivB47fuyYofTd7G0bLvXCCWsAsIvVxwxV5/pEKp51z2esMS+q4BRGpt4WFPANLGUpmxG8JNuDEb/OaBqoXjkhz2vGWA38NzrPARTP7x5u8/6+0GFlEamFuzuuBk+2JMjQaDfTaQ/sGyHb3qxeOSJMKYk/lp4GH8dbpfIBz7lvA/RsXKYuI7FR5BifdGyORCPYR0uCgeuGINLMgAo75j7Huds798RZjngYeCeBeIiLvKncxzscSdHS0BXptrxdOnNhimoUFzeCINJsgAk78RgP89TuJAO4lIvKu5GyWaD7L6shwTa6/OjxENJ8ltaAZHJFmE0TASVS4xmai3FdHRCQIK1dmMIB9e2pzgz0jXi+cK7O1ub6I1EwQAefXgW+a2R03GKdGEiISGOccbtILHu0Hg23yV9a23+uOvDqpgCPSbHYccPyGgN8EXjez//M6szmPsUUvHRGRahUKq3RnUgB0H6pNwOn2m/11LCywsrJWk3uISG1ct9FfpZxz3zOzceA7wGNmdgEvzLzqD3kIeN45p0NdRCQQqVSB/oL3ldI/trcm9+i/aT8A0XyWZDLP6Kg2g4o0i2CO3sU7aRw4AjwOGF6oeQL4PPC0c+5rQd1LRCSVKhDNZ1lu7yR+YLAm94gdGqYYafcDTqEm9xCR2ghkBqfM3y31hP9HRKRmkskC/fkcuZ5+xmp0jMLgUC8Xe6MMLGVIJrVVXKSZBDaDIyJST+UZnGx3tGbnRCUS3WR7oprBEWlCNww4ZvY7ZvYjM/uCzpsSkUZRXoNTiA7Q2Rlsk7+yjo428tEY0XxWzf5Emkwlh21+HvgqcA9wTmFHRBpBamGJ/kKO1URte4iuDg3RX8iRnF+s6X1EJFgVPaJyzr3gnPu8c24QhR0RaQCFa3NEnIM9QzW9j40OE3GOwlX1whFpJlWvwVHYEZFGUG6+17Z3pKb3afeb/a1dU8ARaSY7WmSssCMiYVhbKxGZTwLQebBGxzT4uvxmf53JBZaXV2t6LxEJTpB9cBR2RKQu0ull+payAPQeqU0X47Lozeub/WknlUizqMk2cYUdEamlVKpAtJClZMbA4drO4MQPDrPS1vFuN2MRaQ4174OjsCMiQUul/CZ/3f0khvtqeq/EYI964Yg0obo2+tsi7LymkCMi1Ugm80QLWXLd/TVr8lcWj3eT9bsZqxeOSPMIrZPxurAz5Jy7ElYdItJ8yl2Mc71R+vs7a3qvjo42CtG4HlGJNJmKA46ZfaaWhYiIVKr8iKoYj2NmNb/f6vAgfYVFUmr2J9I0qpnB+aaZ1fZht4hIBXLTabpWVygN1eYU8Y1szzARHIUrM3W5n4jsXDUBJwF8z8zurVUxIiKVKF7zgkZkdLgu92s/4O3UWlWzP5GmUU3ASQGPAAkz+1Uz+4oWB4tIvTnnWJueB97rMlxrPUe8Zn/d6SSFgpr9iTSD9irGnnLOXQYuAy+YWRR4xMxiwAXn3O/WpEIRkXXy+VV6smkAeg7XtslfWd8xr9nf5Vd+SDKZZ9++aF3uKyLbV3HAcc69vuHnLPAtADP7iJn9KhAHvu2ceyPQKkVEfKlUgf5CDoD+o/vqcs/EwUGWiDBCkYUFBRyRZlDNDM6W/PDzOoCZfdbMHgKSwNPOuVwQ9xARAb8HTj5LoaOL+N5YXe6ZGOzlNdrZ41ZJpdTsT6QZBBJw1nPOPQdgZoeAR81sDPgz59x/CfpeIrL7lLeIZ3ui3Jzoqcs94/FuZqyDPRTVzVikSdSy0Z/De2T1IN7uq3kzu7OG9xORXSCZLLzbxTgW66rLPdvbI8xG2jSDI9JEAp3BMbN+vEDzKDAOGN7uq2+itTkiEoBUqsDBfI7U4CgdHW11u+9CJEJibZXUvJ66izSDQAKO3xvnUbxwE8cLNt/BCzUvBHEPERGA9MIifYVF1gYTdb1vst1oK0Lh6lxd7ysi21NxwDGzz6zfCu73wHkQeAwYwws1F/AO0Xza32UlIhKowrU5IjgYqU8X47KFDoM8lKbU7E+kGVQzg/MY8Lv+mVQP4YWb8iOoZ4CnNm4lFxEJ2tqkN4PStq8+Tf7K0h3Ou+9CkmJxra6Px0SketUEnLvNbM3/ZwMm8B5BPRd4VSIim1hdLRGZXwCg6+Ceut473ekFnP58jnR6meHh3rreX0SqU+0anIvAt/EeQV2uQT0iIltKp70dVAC9/vEJ9bLUucoKRjSfJZnMK+CINLhqAs4F59yxmlUiInID5R44axYhdqS+Mzj5wjzfWJrn5vkEt2iruEjDqybgfKdmVYiIVCCZLBDNZ8n19LNnsH4zKGfOnOEnP/kRPymV6HjzIv/HX/yAj3/8f6zb/UWkehU3+nPOfflGY8zsoL9l/H2vbacwEZGNyudQZbujxOPddbvvxMQEpVKJErDq1vjhD/+ibvcWke0JpJOxmd1pZj8GLgEvbXj7fjP7QhD3EZHdLZXyZnAWe6P09XXU7b7j4+NEIhEM6CDC4cPH63ZvEdmeHQcc/8ypZ4Gn8PrhfHX9+/4uq2f87eUiItuWXFiiP5+jGI9jZnW778mTJzl+/Dj3DnyIZ2N3MtqjiWmRRhdEJ+MvAZ8u76oyM7dxgHMua2bxAO4lIrtYbiZN51oRN1zfJn8AsViMmxOHuGcxyflJNfsTaXRBPKJKbdgyvtWvVQo4IrIjq9dmAIiMDody/1T5qdj0HM594Hc5EWkgQQScjcFlq//qjwZwLxHZpZxzlKbnAeg4UN8uxmUpv9lf31KWbHYllBpEpDJBBJyzG9bXfGAGx3//QgD3EpFdanGxSO9iBoCew6Oh1JDpKgHQX8iRTOZDqUFEKrPjNTjOuefM7M/M7H68LsfvzuCY2Z14Z1idAE7t9F4isnuVd1AB9I/tC6WGSOcai129RPNZUqkCR46EUoaIVCCQbeLAp4EM8DLwuJmt+edWvYb3CGvcOZcL6F4isgs99ND/zPzfvkG+s5vE3oFQamhvXyXbE6U/nyOlbsYiDS2IXVQ457LAY2b2dWAcb7t4CpjQCeMiEoRisZ1ht0K2O8q+Ojb5W6+tbZVcT5SBpTQzCjgiDS2QgFPm76bS6eIiErjV1XZG3BK5nn5isXACjhmsxGL0z1/lp0kFHJFGFtQjqnepoZ+I1MLaWjvDFCkMxGlvD/yrq/I6BhP0ruTJzGZDq0FEbqwW3xKPmllfDa4rIruYK7aRYI21wUSoddiot0V95Zqa/Yk0sooCjplFzeyPyouH/T9vm9lvbzxcE2+beGbD2DUz++3gyxeR3SJWNO8La2QolPtPTEwwMTFBx34v4KxNKeCINLKK1uD4i4h/ycx+EXgc+KJz7vR1PvIa3iJj8HZRTVRyGrmIyFbiRe/v9n3hdDEu6z68B4CudIpCYZXu7kCXMopIQCr+L9PMong7pE75gWcrDrhv/bZwM/usmd3rnPvzbVcqIrtWsbjGUGkNgO5D4TT5K+s/6vXgKffC2bu3P9R6RGRz1azB+SLw1RuEGwDb2PPGP1H80WqLExEBr8nfsFsFoHdsb6i1xPYPstLeoV44Ig2u4jU4wLEKwg143Yw3kzYz/aojIlVLpQqMUGQZI3Yo3EdUiUQP2e6ojmsQaXCVzuCcAN6pZKA/W7OZpH8dEZGqlGdw5mknMdgbai3xeDe5nv53H1GJSGOq5hHVTvdmbjx1XESkIslkgWRxjv87f5mf/vRsqLV0draRj8YUcEQaXKUB5yzeAuOdeNC/johIVf7yL/8bT6Re4f9ZfIt/9I/+IWfOnAm1ntVEgr7CIsn5pVDrEJGtVRRw/LU3ZmY/t52bmNkngLQO3BSR7fjRj35AkRIOWFlZYWJiItyCRoZocyUKk/Ph1iEiW6rmEdU3gN+stkuxv0D5aeDr1Xxui2sNmNl9Znb8BuMO++MOV3DNiseKSDgOD91KJxEM6OzsZHx8PNR62vZ5zf5Wr82EWoeIbK3igOOcexa4BLxsZndU8hkzuxOYAF5zzv3utirk3WDzbeC7eI/KHjSz581sYJNxzwOP+C89stm4aseKSLgOto/wbOxOPhq/nRdffJGTJ0+GWk/nQa/ZX2Q+ydpaKdRaRGRz1bbg/BzwMnDODxzfAc46566UB/ih5gTwEO+tu/ncdgv0A8dLwFN+yCq//hTwTd7fX+cl4GHn3Dn/55f92Z6XgLs3XLqasSISEuccbmaeezoGOBIfDD3cAPQd8ZoN9i1lSaeXGRzsCbkiEdmoqsM2nXNZ59zdeMc1fB5vRuXi+jOn8I5peAYv4HzVOffRHa69eQZ4fn248T3Cup1ZZvY54MK6wFKu+RxwwX+/6rEiEq5cboXexQwAqU4XcjWegSN7KJlpJ5VIA9vWaeLOuSeAI3hB52W8AzbLf14Cvgoccc49uZPizOw+vFmgb2xSQ8I599C6lx4FXt3iUq/y/pmeasaKSIiSyQLRvNdjNNu1FnI1nvhQH7nufqIFBRyRRrWtgAPgnLvsnHvCOXe/cy6y7s8nnXNPOucuB1DfY3gHdWYqGDvO1tvQN25zr2asiIQolSrQn8+RpA06GiPgJBI9ZHuiXl3qZizSkLYdcOrkQeACvG+3032bLC4u74BKsbnUumtUPHYnhYtIMFKpAtFCllnaaW9fDbscAPr6OljsjWoGR6SBNWzAWbcV/Lz/zyfwwkcc+K6ZfWrd8LEKLztW5VgRCVkymac/n2POOhom4JgZxXicaD5LMqmAI9KIqt1FVU/lBcQJAOfc9/yfz5nZBPCamX1gobCItJZUqsCxfJa5SCdmYVfzntLQIJ2rRXLTW00Gi0iYGnYGZ53xTXY7ZfDWynyz3sWY2T83s1fM7JXZ2dl6315k18nM5ehdyTPf1lhfV5G93qnmK1fV7E+kETXWN8bmtloM/CowXu+1Ms6533LOfcw597GRkZF63lpkV1q+6v0ikWwLuZANOvd7zf7czDzONcb2dRF5TyMHnAv+3+dvMG6MrRcMb5SqcqyIhGxtag6Af/TIPwv/DKp1uv1mf725NEtLxZCrEZGNGjbgOOcu4YWMRAVjy4+wxrYYMlYeV83YyioVkVpZXl6lM50EoOvQnpCreb/o0X0A/lZxLTQWaTQNG3B8E3i7p66n/AhrguuHlokN1610rIiEpNwDB6BvbG/I1bxffHSAfGe3uhmLNKhGDzhPsXXAeQh4el0TwG/7r2019tvrfq5mrIiEJJXyuhivtHUQOzAUdjnvE493k+2J+lvF1exPpNE0dMBxzr0MTJjZr61/3T/CIQ58cd3YZ9e9t3Hsu+9XO1ZEwlM+piHX009isDfsct4nFusm2x2lv5DTDI5IA6q6D46ZHcQ7g+pBvJBxFvgj59y/2WTsr/r/OA782WZjKvAw8LiZfR/4PnAU7zHSXZsc4XAKeMbMxvEeM43jnQx+apPrVjNWREKQShXoL+TIdfcTj3eHXc77tLdHWBmIMXppmre1Bkek4VQVcMzsEN5p4XHeW6cSB540s18CPuec++vy+PJhm2ZmwBNA1QHHDzGP+dvBx/AeS126ztiHNox9YqdjRSQcqVSBkXyOqT0H6e5uvL6ka4MJ+t5cJD2fC7sUEdmg2m+MZ/CCzcPOuWz5RT8kPA68bGb3rQ85vh03ifBDzabBpl5jRaS+Usk8/YUcq4kbbqYMx+gwBqxcVdNPkUZT8Rocf/ZmDG+WJrv+PefcJefco3gLdF8wszsCrVJEdqWla3O0l9Zww421wLisfZ/X7HPV79UjIo2jmkXGY8B3nHNbzsX6i4JPAN8yszt3WJuI7HKrk97MSPlYhEbTfdhr9teRTLKyshZyNSKyXjUBJwUs3GiQv7bl08DnFXJEZLtKJQez3ldO18HGavJXVu7No144Io2n4oDjnHsduKfCsVnn3JfxFvEq5IhI1TKZZfqXvKfhvUcaq8lfWfzQMMW2dvXCEWlA1fbB+XUz+wp4W8DNbM7fNr4pfxfVUbzt1yIiFUulCkQLWUoYA0dHwy5nU/FED7nufvXCEWlAVe2ics69bmYpv7/NQ1QQkJxzL5hZGq/PjIhIRZLJPP35HEvdvcSH+sIuZ1PxeDc/ebebsQKOSCOpukYnBt0AACAASURBVJOxc+6yc+5J59w9zrlB59yVCj7zsnNucHslishuVD6HKtsTbbgmf2Xd3e0s9cfoz2sGR6TR7Lhzlv+IamzDyynn3Bs7vbaI7F7JZIH9hSyp/gTRaFfY5WxpdTBB9OLfkJxfDLsUEVlnWwHHzD4DPMp1Hjt5zYuZAH7HOfd727mPiOxeqVSB2/JZZg4cJRKxsMvZkhseos2VyE/dcJOpiNRRtUc1RIGXgAt44eUbeNvHNzPm//kVM/sycOp6PXRERNbLzmboLi5TGm7sp9vt+7wePavqZizSUKqdwXka75iG1ysYe9r/+0n/lO5ngF+u8n4iskuVjz+I7GnMLsZlnYe8HV42t8DaWom2tqqXNopIDVR7VMPZCsPN+/gdjs9eb0u5iEiZc47StHf8Qfv+kZCrub5yj57+fIZMZjnkakSkrNqjGr6/g3tN8MHFyCIiH1AorNKd8Z5+dx9qzB44ZbGxPZTMtFVcpMFUE3AusLNeNqf8a4iIXFcy6W0RB+g/tj/kaq4vPtTnNfvTVnGRhlLNUQ2XgXu2c1K4md0L3FNJzxwRkXIX4+X2TuL74mGXc12JRA/Zd5v96bgGkUZR7SLjh4GXzOw88CpwlhvvovolwOHN4IiI3ND6Jn9HG7TJX1lfXweLvVGG0rNc1gyOSMOo9qiGLN4szmfx+uA8cYOPTABPOeee2155IrIbpVIFovksuZ5+EonGDjhmRjEeJzr1jtbgiDSQbTX68wPLc/Du7qqxDUNS29ltJSIC3jlU+wo5riaO0tHRFnY5N1QaHqJztUhueqsJbRGptx0f1YD3+Mlt8pqIyLakFpboL+RYHUyEXUpFIqNes7/i1emQKxGRMh3VICINJ39tjohzMNLYTf7KOg/uAaA0PY9zrvz9JyIh0lENItJw1ib9Jn97h0OupDI9h71ePb25DLncSkMfDiqyW+ioBhFpKKurJSLz3sGVXYf2hFxNZaLH9nl/F7LeAmkFHJHQ6agGEWko6bS3gwqgd2xfyNVUJr5ngKXOHnUzFmkgOqpBRBpKuQfOmkUYONzY51CVJRLdZHui6mYs0kB0VIOINJRk0utinOvuJzHUF3Y5FRkY6FI3Y5EGo6MaRKShlGdwcj39xBu8i3FZW1uElVicaD6rGRyRBqGjGkSkoaRSBQ7ns8zHR+jr6wi7nIr98PzbfHglT3o2G3YpIkJwRzVsbOxXbgIxgY5qEJEqpFIF7ihkmYrf0lT9ZJLtBiuwcnU27FJEBB3VICINJjedonO1SGm4OZr8lSU7vDC2NqWAI9IIdnxUg78253IAtYiIsHJ1BoDIaHMFnFSHN5HdlU5RKKzS3R3ESTgisl3V7KISEakp5xyl6XngveMPmkW6yws42iou0hjqEnDM7Mdm9ko97iUizSubXaFvMQ1A7+G9IVdTnWLnKktEtFVcpEHUawbH6ngvEWlSyWSe6JK3Cyl60/6Qq6lOe/sqM7TTX9AMjkgjqMtDYufc3fW4j4g0t2TSO6ZhsauXxOhA2OVUpb19lVnrYr+OaxBpCJpVEZGGkUzmieazZHuiDA72hF1OVSIRx5y1qdmfSIPY8QyOf4Dm2IaXU865N3Z6bRHZXRYW8hzIZ0j3J4hGO8Mup2rzbRH6C2mS84thlyKy620r4JjZZ/Aa/Y1fZwx4jf5+xzn3e9u5j4jsLslkgQ/ls8wcPNZUTf4A0uk0f7I4zYetk8LkXNjliOx6VQUcM4sCL+EdmjkBfIMbH9XwK2b2ZeCUcy63zTpFZBfITKfoLi7jRpqrB86ZM2c4d+4cpVKJHxPh0bP/DfjHYZclsqtVO4PzNPBwhV2KT/t/P2lm9wHPAL9c5f1EZBcp+k3+bO9wyJVUZ2JiglKpBECREhfe+TGrqyXa27XMUSQsFf/X5x/JcHY7RzA4514GzvrrdUREPsA5B9Peo52uQ83VA2d8fJxIxPs67SDCndH9pNNaaCwSpmpmcMaA7+/gXhP+Na7s4Boi0qIymWX6cl6Tv56x5go4J0+e5Pjx48zOLPIbS32sdsZJJgsMDfWGXZrIrlXN/OkFrrOouAKn/GuIiHxAuQeOAwaO7Qu7nKrFYjEOHR7j5oED2iou0gAqDjj+oZr3mNkd1d7EzO4F7nHOafZGRDZV7oGz2NVHYk807HK2pb19lWxPVMc1iDSAahcZPwy8ZGbngVeBs9x4F9UvAQ5vBkdEZFPJZIHoktfk72iiuZr8lUUiJZZ6o4wkp7igGRyRUFUVcJxzWbxZnM/i9cF5ovzWhqHlBhYTwFPOued2UqSItL5kMs+BQpZUdLApm/wBmEFxMEH02pskFzSDIxKmbTX68wPLc/Du7qqxDUNS29ltJSK718JCntuXMswcar4mf+u5oUE61lZZnE6GXYrIrrbjoxr8tTmXA6hFRHax7FSKrtUV3Ehz9cDZKLJvBHivp4+IhOOGi4zNrL/WRdTjHiLS2MqBoBwQmlXngT0AuJl5r7ePiISikl1U9/u7oAJnZv1m9oVaXFtEmkep5GB6FoDOg3tCrmZnesdGAehfzJDNroRcjcjudcOA45x7AThqZl8JcqbFzD4BfBN4WmdUiexumcwyfUtZAHqP7g+5mu2ZmJhgYmKC6NheHNBfyGmruEiIKuqD4y8q/i7wPT/obPvIBTP7RTP7M7zDN/8XhRsRSSbzDCxl/CZ/zdXFeKPESJTFrj41+xMJWcWLjP1dUZ/0t4g/a2YxvG3gr+J1KE45594oj/dne074P44D9wB3Ad/BO7BTC5NFBHivi/Fidx+JkeZs8lcWj3dz5d1mfwo4ImGpehdVeYu4vz18HPgk3jbxE37oWe81vEaA38frh3MaEZENyl2MMz0DHEt0h13OjgwMdJHrjRLLpZjSIyqR0Gx7m7g/A/NuPxwRke1KJgscymdJDgzR39+cTf7KIhGjGI8Tnb3MTzSDIxKaag7bFBGpifIMzkpisKmb/JWVhofoKRZIT6XDLkVk11LAEZHQZSaTfpO/obBLCURkr9fLZ+XKVMiViOxeCjgiErrVK63R5K+s87C3E8xNzXo9fkSk7hRwRCRUpZKD2TkAug6NhlxNMHqP7gO8Zn+ZzHLI1YjsTgo4IhKqTGaZ/sUMAL1jzd0Dp2zgpn1eT5+ljJr9iYREAUdEQrWw4C0wXgO+/O9+LexyAjG4J8pit9fsb2FBAUckDAo4IhKqcsCZp522zrWwywnE4GAPmZ4BBvIZNfsTCYkCjoiEamEhz0A+w6y1095eDLucQPT2dpDrixFd0gyOSFgUcEQkVPPzSwwsZZi2DtraSmGXEwgzoziY8B5RzS+FXY7IrqSAIyKhWvADzmxba30dudEROteKLE4uhF2KyK50w28UM/sdM/uRmX1hJ6eIi4hsZvHqHO2lNebaWyvgtPk9fYpXpkOuRGR3uuE3inPu88BX8U4DP6ewIyJBWvMDwPy2T8ZrTF2HvZ4+kbl5Vldb49GbSDOp6Fcm59wLzrnPO+cGUdgRkYAUCqt0Jr1HOMmukIsJWP9NBwCvF04qpZ1UIvVW9Zywwo6IBGVhIc/AktfkL9nVGlvEy2Jjo6xZRL1wREKyo4feCjsishPlgLPS3sH8yhyXLl3izJkzYZcViMHhPrI9UQbyGQUckRAEtqpPYUdEqlXeIv7nkTV++tNXOH/+PA888EBLhJxEoptM7wDRpayOaxAJQU22LSjsiEglyk3+zqxlKZW8hbgrKytMTEyEW1gAurraWYrGNIMjEpKa78tU2BGRrczPe4+oPrz3FiIR7+uos7OT8fHxcAsLyNrQoLcGZ24x7FJEdp26Np7YIuy8ppAjsjulp9L0ruS59abjHD9+nKNHj/Liiy9y8uTJsEsLxugIEecoXJ0LuxKRXSe0zhPOuReAF8K6v4iEb8XvgRM5sIfYfIxYLNY64QZoP7AHgNVrMyFXIrL7tFbrUBFpGmtrJWzK+x9/1+G9IVdTG91H9gHQlVygUFgNuRqR3UUBR0RCkUoViPo9cPqO7Q+5mtrov8kLOAP5jHZSidSZAo6IhKLcA6dkRuym1gw4iUPDrLR3EF1Ssz+RelPAEZFQlLeIZ7ujDI1Gwy6nJgaHesn0DGiruEgIFHBEJBTz83liS2kyvQMkEt1hl1MT8Xg32Z6o3+xP51GJ1JMCjoiEYmEhT3Qpy9JAnK6uFjtK3NfWFqEQT+g8KpEQKOCISCgW5haJ5rOsDg+FXUpNrQ0P0b+8SHo2G3YpIrtKa/7aJCINr3BlhjZXwvaOALTE8QybsdFhAJYvT4dcicjusuMZHDP7RTP7SvnPute/bmYlM5s3s9/Y6X023POwmQ3c4P37zOxwhdeqaKyIBMM5x+pV73/4HYdaswdOWaff4+elP/gjTp0aD7cYkV0kiEdUZ4FfAr7jnPsagB9oTgFHnHNDwNn14ScA3wVObHzRzAbM7HngEf+lR8zs+c3CUDVjRSRYS0tFetNJAHqOtuYW8bK+o14vnFG3ytqaJs1F6iWI/9o+DZxyzmUBzOwQ8CXg0865ywDOuefM7OsB3Asz+zU2CTe+l4CHnXPn/J9fNrPj/ut372CsiARobm6J6JK3JmXg1tY+ii522yEA9roif11UwBGplyBmcOLlcOM7AeCc++MN45I7vZEfQO7f4r3PARfWBRb8Os4BF/z3qx4rIsErbxHPd3QzdHAw7HJqamhfjFxXH6OuSLHYEXY5IrtGLXZR3Q9MbPK6C+DajwK/fp33Xt3ivVf997czVkQCNje3xMBShnRfjOHh3rDLqamhoV7SfTH2UWR1VQFHpF6CCDhpM+sHMLMo8CDw/fUDzOxOIL2Tm5jZvwa+fZ0h43jrgTZz1n9/O2NFJGBzc0vEl1LkonF6e1v7f/rd3e0sRuOawRGpsyACztN461e+grf4NwV8A7xgY2a/6r/+/HZvUN7htPGR0sb3/XtvJlUeV83Y7VUrIjcyN7vIwGKG4shI2KXUxerwMKMUWV1pC7sUkV1jxwHHX39zCm+G5nm8Bcc5M/sE8JA/7Gm8mZ3tesw595vXeX+swuuMVTlWRGpg6fIMHaVV2Lcn7FLqY98IHUCsqN6qIvUSyJJ+P+R8y8wOAncBf+6cOw2cNrND5d1U2+E/mtr27I+INBbnHGtXpgDoOLIv5Grqo+PwPn5czJAuvMEPfvADfvZnfzbskkRaXiC/TviPon4MXMLbZr3euJl9YZvXHcDbpfXyTmsMipn9czN7xcxemZ2dDbsckaaTySzTl/E2Vfbe3NpbxMvecUk+l36Dt3Kv8fM///OcOXMm7JJEWl4QnYwPAc8CT+E91vnq+vedc88Bz5jZZ7Zx+cfx1/M0CufcbznnPuac+9jILlk/IBKkubklYovenoPYbbtjqdtPZt9hhRIAKysrLXsshUgjCeIR1fua+pnZB7aDO+eyZhav5qJm9im83jknzGz9W+Umf+XXL7D1guGNKh1X7VgRqdD8fJ74YopcVx8jBxNhl1MXD/zDX+A//cffYIUS7e0djI+Ph12SSMsLIuCkNqyxsS3GVRVweC9gjG94/aj/993+NSeccy/7YWcM2Oxx1hi8twurmrEiEqy5uSViS2nSfTE+NNQTdjl18Q/+wThfi9/DK8U0f/9r/4aTJ0+GXZJIywsi4GwMLls19Du6xeub8tfdfCCAmNl9eOdHfXvD2pwJtt75NMb7mw9WM1ZEAjQ3t8SHlzLMjRygq2t3HF3Q09NOonOYf9E+wNToh8IuR2RXCOSwzQ3raz4wg+O/fyGAe13Pt3lvW/pGD/H+JoHVjBWRAM3P5hhYyrC6ZzjsUurGzJiJtDFKkfm5pbDLEdkVguiD8xzweTP7bTO7l3UzOP7uqt8GHsNbhFwzzrln/Xvet/718s/l96sdKyLByl+cos2VsAN7wy6lrmY7InThWLw8E3YpIrtCUPPDnwaewHuk5Mzs8XXvfQcYd87ldnID/wDMR3nv0dIzZnYB71FVOZCc8l8fx3vMNI63VufUJpesZqyIBKBUcnB1Gtg9PXDK5juAPKxemcY5x4bNEyISsCAb/T1mZl/HCwpjeIuEJ5xzrwd0j2fxtqNfb0wGeMg/ZmEMeNo598ROx4pIMJLJPNFFb/9A3y7pgVM23+lNbvemF1haKtLX1xlyRSKtLdAVfv5uqueCvOY267iE13Qw0LEisjPz83lii2kcEL9tdwWcVLfXB2dgKcP8fF4BR6TGanYwipkdNLN7/XU5IiLvbhHP9kQZ3hcLu5y6Wu1aJUOE2GKa+XktNBaptSA6Gb+41VvlP2b2FTO7c6f3EpHmNj/vdTFO98UYGuoNu5y6+tM/fYF8bPjdGRwRqa0gZnA2XSnnnLvsnDvt//kaH2zYJyK7THkGJx8fpL19d52s3dfXQTYaJ7akGRyRegjiG2arxn4b3R3AvUSkiS1MZYjms6zu2X3nuJkZxaEhbwZHvXBEaq6qRcb+wZqP8P5QM2ZmX7nBR+8HzlZXmoi0msLFSQyIHNxdPXDK3N49dL5WJHtlLuxSRFpeVQHH3yX1pJl9BO/Qy8eBI8Anb/DR551z39peiSLSClZXS7RNzwLQNbY/5GrC0XHIC3bFS1PqhSNSY9vaJu73tnndzL4LnHXO3SjgiMguNze3xIDfAyd626GQqwlH7y3e1vje1Dy53ArRaFfIFYm0rh2twfGb5f16QLWISAubmVkktphmzSIMf2h39cApi91+xPt7Mc3srNbhiNTSjhv9+WdRbcrMPsF7u6dedc798U7vJyLNaXZ2kfhiinRfjNv2DoRdTihGjgwz19VLYjHJ7Owix44lwi5JpGUF2sl4I+fcaeA0gJn9IaCAI7JLzc4ucTiXJBMdJBrdnV18h4d7ebs3RmwxzZx2UonUVCABx8z68RYcn9hiSDyI+4hI8/rVr/xb/jA9R2rs2K5dXNvZ2cZifJCR6Su8rkdUIjW144BjZlHgJbxt4BPAUeD8uiFHgYvAF3d6LxFpXr0rbfRRwh3YnVvEy1b3jjJw4W+Yn86GXYpISwtiBudh4KnyWhx/3c1559yV8gC/f84R4I0A7iciTaZUcowWvfZZnUd35wLjssjBvUScI3/hWtiliLS0IDoZH9uw0PgCGx5V+f1ztnp8JSItbmEhz35XBKD/tsMhVxOurmNewItMzlAsroVcjUjrCiLgLKz/wQ8z928ybiyAe4lIE5qdXeSAW6EEJO4YC7ucUEU/5AW8xGJSC41FaiiwwzY3nBaeMLN/tmGczqIS2aVmZ5c44FaYoZ2RA7GwywnV0G0HWI20aSeVSI0FEXCeNrOvA6+Z2Rf8174EfMvM/rOZfcXMXgRSAdxLRJrQ7OwiByhy1TpJJHrCLidUw3v6SffFiC+m1OxPpIZ2HHD8R1JPAV8FnvFfy+A1+BsCnvCHaheVyC41M+M9opqMtBOJ7M4t4mUDA12k+xPEF1OawRGpoSBmcHDOXXbOPemcy6577Zxz7n7nXMQ594BzLhfEvUSk+SSvLnC+mOT5/DucOXMm7HJCZWasDA97Mzgz+loUqZVAAo6IyFacc5z/q5f4XPoNXs78LQ888MCuDzlu/166VldIX5kPuxSRllW3gGNmv1Gve4lI48hklrl24VVWKOGAlZUVJiYmwi4rVB1j+wFYu3gN51zI1Yi0proEHL/b8YP1uJeINJaZmUXu6t1Dp/9109nZyfj4eLhFhazvlkMA9KcXyGSWQ65GpDVVFHDM7BNmtrbdP3g7qMZq+m8iIg1pdnaJj7f18R9ixzl8+CZefPFFTp48GXZZoYp9+AiAdlKJ1FClRzVcANJ4xzJstt37IeBVf9xGR/G6GD9ffXki0uxmZhaJL6awzhHGxuK7PtwAjBwaZLqr792dVDffPBh2SSItp6KA45y7bGZnnXMvbHzPzO4FnnfOnd7i46fN7FW8s6hEZJeZns5xZDHF30baMVsJu5yGMDTUw0/74v4MzmLY5Yi0pIrX4DjnPrnFWyeuE27Kn30dPaIS2ZVmLy8wkM8y2aFNm2UdHW0sJYaILab1iEqkRoL4xokHPE5EWoRzjuL5KwBMdu7uBn8blfbuYSCfYe5aOuxSRFpSEAFn0Mz6Kxh3NIB7iUgTWVjIE0t5vV5mukshV9NY2o7sx4D8O1e1VVykBoIIOM8D37zeADP7DJsvQBaRFjY9vchgbgGA+R4FnPV6bvVOFe+Zm2FxsRhyNSKtp9JdVFtyzp02s6Nm9jbwO8BL694+gbfDKg6c2um9RKS5TE/nGMwukOmJ8sd/+kfE491hl9Qw4h85BkAil2RmZpH+/s6QKxJpLTsOOADOuWfNLAV8A3gScIDhbSl/CviGzqIS2X2mpxc5kEuSGhgiFusKu5yGMnrrPuY6u0nkkkxP5zh2LBF2SSItJZCAA+Cc+x7wPTM7hL9j6ka7q0SktU1NZvlIboFLt5/ATIuM1xse7uXN/kEGcwtMT2uruEjQAgs4Zc65y8DloK8rIs0nc2mG7uIyHD4QdikNp709wtLQMHuunOetGQUckaDV87DNF+t1LxEJX7G4hl2+BkDXLYdDrqYxrR3Yz0A+y9yVhbBLEWk5Fc/g+AdmfpEN62n8HVJjFVziRNXViUjTmplZZDDjbREfuPNYyNU0prajB2ECiue9reJ6jCcSnGoeUX0JeNz/56+te/3zeOHl7A0+r0Z/IrvI9PQiiVyS1Ugbw3dqBmczfbd7J9j0J+dIpQokEj0hVyTSOqoJON/w/97Y8+b7wFObnVO1npn9WTWFiUhzm57OMZhbINmf4MT+WNjlNKTBDVvFFXBEglPNWVRZ59yTzrnshreexgs5N/LFagoTkeY2NeUFnGximO7uwPcztIQ9Y8Nku/sZzGonlUjQdrzI2Dl3uZIeN/6BmyKyS8xOZYjnUqzu2xt2KQ1rcLCHVHTw3V44IhKceu6i+o163UtEwuWcI/fmFdpcicjRg2GX07AiEaMwsofEoveISkSCU5eA4+/AerAe9xKR8KXTy/TNzQLQf7vO2b2e0sF99C0vkbw0F3YpIi2logfjZvYJYKK2pYhIq5iczDKU9baID95zc8jVNLaOmw4BsHbhCqWSIxLRVnGRIFS68u8CkAYexjtfaqOHgFfZ/MTwo3jbyJ+vvjwRaUbXrnkBJ9fVx5Hb9oddTkOL3uHNcMUzC8zOLjI62h9yRSKtoaKA45y7bGZnN9sKbmb3As9f59yp02b2KnBkB3WKSBOZnMxxJDNHMjHCcR2yeV0jdx2lhDGYW2BqKqeAIxKQaraJf3KLt07c6FBNfwfVWBV1iUgTu3Y1w3B2juX9+9Wd9wb2HR4k3RdjMLvAtWsbu3CIyHYFsci40g7F6mQssgs458i+fY3O1SJ27FDY5TS83t4O0oMjDGXnmZrSVnGRoAQRcAbNrJI5VW2lENkFstkVememAOj9sM6gqkTxwAESuSRTV9NhlyLSMoIIOM/zweMb3sc/kPNCAPcSkQZ37VqW4Yy35Xnwo7eFXE1zaLvpMO2lNfJvXcE5F3Y5Ii1hx/3TnXOnzeyomb0N/A7w0rq3T+DtsIoDp3Z6LxFpfJOTXsBZ7Orl0O3aQVWJvju8ma7o/AwLC3mGhnpDrkik+QVyQIxz7lkzS+EdyPkk4ADD21L+FPCNSo5zEJHmd+1alkPZeZKxYT4S7w67nKYw9LFbvb/9dTgKOCI7F1gnY+fc95xzx/C2g48Dp5xzg1sc0CkiLWrS74FT2KcdVJXad9MeMj1RhrLzTE7qd0GRIAR+xK9z7jJwOejrikjjc86RenuS7uKydlBVIRrt5G8LawxcfpvJSf0+KBIEHbYpIoHJ5VbonZoEoOcO7aCqlJlxpb2dw26ZyWuZsMsRaQl1Czh4j61EpIVdu5ZlOOvtoErcox1U1bjaZfTiyL11TTupRAIQyCMqM/s63jlVauYnskuNj4+TTCb4tc4DLHX2cOCOA2GX1FSmuoAc9M5Mkc2uMDCgIy5EdmLHAcfMPot3DMMjbH4QJ3g7qr6903uJSGNbXu5ieHmOVHyYOxM9YZfTVKZ712Aef6FxVgFHZIeCmMEZd8790o0GmdnFAO4lIg1spdDJyPJVrh7/qHZQVWmlp0iStnd3Ut1223DYJYk0tSACzoVKBl3nsE4RaQHOweCK0bW6QtuHtMC4WktL8zyVz/Fz0+3kr2qhschOBbHI+EIlZ1GZ2Z0B3EtEGtTKSic3lVYA6D+hBcbVOHPmDOfOneP/XXyLX7n8fX7wFz8IuySRprfjgOOcew44UUHIue55VSLS3JaXu7jJFXDAnpO3h11OU5mYmKBUKuGAIiX++q9e0k4qkR0KYpHxZ/AWGT9uZmeB5BZDT+z0XiLSuFKpHD9dvMZL0T187qaRsMtpKuPj40QiEVypRAcRbu8eZX4+z/CwjmwQ2a4g1uB8Hi+8nAXuvs44bSEXaVFnzpzhwoXTXHRr/Jf823z4lb/k5MmTYZfVNE6ePMnx48dJz+T494u9ZNr6uXo1o4AjsgNBBJzvA08551643iAz+7MA7iUiDWhiYgLn1rxHLK7ExMSEAk6VYrEY/f0JbrrYw9XMDFeuZLjrrr1hlyXStIJYZDwBvFrBOPXBEWlRP/MzP0eENtqAjvYOxsfHwy6pKbW1lUiP7GUkPcuVK9pJJbITO57Bcc6d3uo9M/sE7x3RUEkIEpEmtH//h/lU4j5uWn6Hu//d1zR7swPFI4c5cPktJi9ttZxRRCoR+Gni6/nh5zSAmf0h8Me1vJ+IhOPq1Qz3dvTxQNsRjnz2l8Mup6l13H6MttN/ytrbl1lZWaOzsy3skkSaUlBnUfUDj7P1TiktMBZpYVeuZLjJLfO2dXFXvDvscppa/GO3wW/BcHqGa9eyjI3p61NkO4LYJh4FXsLbRTUBHAXOrxtyFLgIfHGn9xKRxnTxQpKH3DL/tbNPRzRs08TEBABTtKkeFwAAIABJREFUV9OkI23sSc9w9WpGAUdkm4KYwXkYbxfVc/Duupvzzrkr5QFmdgg4ArwRwP1EpIGsrKyx9OYVeilxWedD7tiefQO8ExvRQmORHQpiF9WxcrjxXWDDoyrn3OWNr4lIa7hyJcOe5BQAl/vUfXenIhFjad9+BRyRHQoi4Cys/8EPM/dvMm4sgHuJSIO5eDHF3uQUq5E2/uOf/H7Y5bSGm8foX15k/q1JHdkgsk1BBByDDxymmTCzf7Zh3PW6HItIk7pwIcXe1BTziVGG9g6EXU5L6Dtxq/f31CRzc0shVyPSnIIIOE+b2deB18zsC/5rXwK+ZWb/2cy+YmYvAqkA7iUiDebihSSjqWkKY0e0wDggo/d6vy+Opqa5eDEdcjUizSmI08QvA08BXwWe8V/L4DX4GwKe8IdqF5VIi1leXqXw1hW6i8u033lL2OW0jEN3HiTTO8De1BQXL+p3Q5HtCKQPjh9yntzw2jk2X4sjIi3i0qU0e5OTAMRPfiTkalpHR0cbqX0HGZ2e5M8vvTeDUz4Co7ylXES2FsQjKhHZpS5eTLM3OUUx0s7BT9wRdjktxd16E4O5JJNvTmuhscg2VDSD4zfzu2uLty9s6HlTHnvWOZfbeYki0qguXUpzNDXN/NAot430h11OS+n96O3w/71AbPIKs7NL7NnTF3ZJIk2lohkc51wWbxfU9/C6Fr8EPMrWW78NeMzMfmPD7ioRaSEXzi+wNzVFYWxMC4wDNnrK+51S63BEtqfiNTjOuW+Z2Vm8YPNFP/RsNi6Ld8Bm+ZDNz5rZCefc7wZRsIg0hny+SPHty3SuFuk4fmvY5bScg3cc4PXeGHuTU1y6lObjHz8QdkkiTaXiNTj+cQsPOuc+v1W42Yzf5TihmRyR1nL+vNfgD2Do546HXE3r6ehoI73/IKOpaS5c0AyOSLWqWWT8MN5W8Ko5574FPLadz4pIY3rnnSR7k1OstHVw5D4tMK4Fd9tNJBZTTL81hXOO/7+9O4+Pqr4X///6zJJ9JUAghJCAKGtCFNCIQgCXqohgrV1F6XZ7/bYuvW2/Xe7Vattbu33R+mt721uLaG1tawU3rCISEAQVTAj7mhBIIAkhmYSsk5nP749zEiaZSTKTbZLM+/l4zCNwPp855zNzzsx5z2d1OByUlJSwc+fOYBdNiCHPrwDH7Dg8KpCaGx8cSinphSjECHHixAVSLpRxITmFmPjIYBdnRIq+ajoA8efK2LjxXQoLCykqKmLp0qUS5AjRA39rcObQac2pXqimlwtuKqUylVILlVJpfuRNG4i8QoS63Nzc9nlYtNaUHKskuaYc5zTpfzNQ2jsaV5/jjTc24Xa7AWhpaZG5cIToQSBNVIl9PFZCoE8wA5v1wApgJbBVKbXFV0CilIoz895nbrpPKbVeKeW1OE4geYUQ3s6evUj82TNYtZvoq2WCv4GSOmMCjugExtWcIzl5FhaL8ZUdFhbWHmwKIXzzdxRVAfAs8B99ONYK4FF/M5tBzAqt9UqPbY9iLAexVymVpbUu8XjKVuBecwZlgG1KqUxze+eFPgPJK4To5MSJC0y4UApAyo1zg1yakctms1CXmsb4kmKs1jQyMzNxOBy88MIL5OTkBLt4QgxpgcyDc0optaA3B1FKXQ+cCnDiv/u01o97bjDXuLoXozboMY/9r8KYcLCwU/5CoNhMDzivEMK3kyerSakqoyY2kZRZqcEuzoimMq8gvrGWmuOlxMYmkJaWJsGNEH4IpInqh8BzSqmAptM0Oyg/CzwSyPOAlUopr+eYQU4eRo1Qm9VAfhf7yTfTe5NXCOHDieNGB+OL6ZNlgr8BlnC9Uak8/nwpTU0RQS6NEMOH3wGO1nobsA2jOcevMaHm3Dd5wFat9fYAy5ZO90PLPfv05GI0o/lSYKb3Jq8QwtQ2RPmdd7bSVFRKTHM91jnTg12sEW/Sjdm0WqxMqCqlsVFGqwnhr4AW29RarwZqgUKl1EtKqS90nsBPKTXL3P5PYC9Qo7X+Yi/KlkXX618lYAYpHh2Ou5oJq6YtXyB5Ay6tECPYzp0724coL1v2CVqOvw/AmCVXBrlkI1/86BiqxqSQcqGMpiYJcITwV8CriWutF2P0f7mTSx1+XW0PjKDmOYxRTz/UWi/tTcG01iWdOhED7cHHHGC9uSndz12mB5hXCGHKy8trH6LsdDqpPFNAiy2MjBu6+g0i+lPLFVNJrinnjls/x5YtW4JdHCGGhYADHACz8+8kjCakbRiLa7Y9tgIPApO01j/qp3J6egxjpfLHe8wphOgXubm57UOULRYbi912LkxMJywiLMglCw2R82dhc7uILT1NRUV9sIsjxLDg92KbnWmtTwO/Nh+DQim1EKNz8aLBOqaPMnwV+CpAWpq0ZInQkJOTQ2ZmJtXVtVw9czWLP3yLc9myvNxgGX/jXJy/hJQLZRw7doHkZJkUXoie9KoGJxjMSfjWAYs6D/EeTFrrP2it52qt544ZMyZYxRBi0MXHxzN69DTmK2Mkz6il84JcotCROied2uh4JlSVcvRoVbCLI8SwMCwCHDO4eQW4w0dw4+8yuzUB5hVCdNLYGMXE86dxWu1k3CoT/A0Wi0VxccplpFad4eiR82itg10kIYa8YRHgYPS7edBXzY3HtvQunpveli+QvL0spxAjWkODEeBcmDCJiBiZk2Uw2a/JIrq5AVVSSlVVY7CLI8SQN+QDHHOyv7Wdg45OkwDm0X3QktfLvEIIk8tlIazJxhhHJe45fk2FJfrR+FuvASDtfAlHjpwPcmmEGPqGdICjlFoObPCjRmUtxrB0X1aa6b3JK4QwPfXUC3x57kwUMPpG6X8z2FKvuYKLkbFMPH9a+uEI4Ydej6IaaOaIqdVAvlJqhY8si4HHAbTWzymlHlZKLTRnXPbcB1rr59q2BZJXCHHJwYOVpFWW4LTamLxsfrCLE3KsVgu1l13GxKNH2SE1OEL0aMgGOBidihPouOaUp84rky8C1imlcjGamXIxVgb3NaQ8kLxChDytNQcPVrKioojqSZMJi5EZdYPBNj+LmH356JIyzp9vYPToqGAXSYgha8g2UWmtE7XWqpuH10rjWuuVGAt7AjyrtV5pLs7Zed9+5xVCQGVlA82ny0mqu4DlmuxgFydkpdxmrCKedr6EQ4cqg1waIYa2IRvg9Ja5xMM2X8s89CWvEKHs0KFK0iuKARh/x/XBLUwIm7hgGvWRMUysPM3BgxLgCNGdERfgCCH636FD50mvKKYhIprU3NnBLk7Islgs1E2bxqTKUxw6WInbLfPhCNEVCXCEEN1qbXVz6GAFkypPUTt9evuaVCI4onLnEd3cQNzZMxQXy5ykQnRFvqmEEN06fvwCceVlRDc3EL1YRk8FW/rducbfimIOHKgIbmGEGMIkwBFCdKuwsJyM8iIAJn8mN7iFESRelsKF0ePIKC+SfjhCdEMCHCFEl7TWFBaWM+XsCarHTSAuY3ywiyQAZ3YmE6pKOXOsgvr6lmAXR4ghSQIcIUSXKirquXimkgkXStHXyuKaQ0XSrQuwajepFSUcOCC1OEL4IgGOEKJLbc1TChj/qcXBLo4wTV6Zg9NqI6O8iL17zwW7OEIMSRLgCCG6VFhYzmVnj9MQFUPK4jnBLo4w2aMjcVw+jSnnTrB/Xzmtre5gF0mIIUcCHCGET7W1zZw4UklGeRH1c7KwWK3BLpLwEHnjtSQ0OIitOMuxY7L4phCdSYAjhAAgNzeX3Nzc9v8XFJxjQuVpwltbGLNClmkbajLuuQmAy84eZ+/e8iCXRoihRwIcIYRPe/aUcUXpEZw2O+mfkgBnqIlNT+ZCShqXnT1OYWE5WsusxkJ4kgBHCOGlrq6ZY0cqmVp2jLpZs7HGyKrVQ5FaOJ/x1edoPlNOSYkj2MURYkiRAEcI4WXv3nJSKk4T01xPwieXBLs4ogvpZjPVlLMn+OijsiCXRoihRQIcIQQADoeDkpISdu7cye7dZVxeepRWq42Mz98Q7KKJLiTNm8bFhCQuLzvK7t1l0kwlhAcJcIQQ7Ny5k8LCQoqKili6dCl5ee9xRdkR6mbOwhYbHeziiS4opXAvvpZJladoOlfFyZPVwS6SEEOGBDhCCPLy8nC7jblUmptbqD++nZimekZ9ammQSyZ6MunLt2PRmitKj7B7tzRTCdFGAhwhBLm5uVgsxteBxWJjscuO02Zn0udvDHLJRE8S502jLmks084c5lvfWsOiRbnBLpIQQ4IEOEIIcnJyyMzMZOLEy7j9Ez/kDkcNjfOuwirNU0OeUgp1w3VMPH+ahFY3DQ1yzoQACXCEEKb4+HhiY+dwrbYT4Wxm3BdvD3aRhJ8m/9tyFJDrrsPhiAt2cYQYEiTAEUIAoLWitjaOmSUHaIqOZdyya4NdJOGn2NlTqJuQyq3uGurrY6ivbwl2kYQIOglwhBAAXLwYTXSrZsq5E+gbrkfZbMEukghA1Kc+wUVnJfba3axd+1qwiyNE0EmAI4QAwOFI4GZ3LVbtJuPrdwa7OCJA5VeNZ5VjPyUXC3j44c/z/vvvB7tIQgSVBDhCCCoq6lm65G4+F93KxfQMoudcEewiiQBtz99DC2404HI5Wb/+X155Oi+oKsRIJgGOEIL33jtFatUZRtdVMeqLdwS7OKIXcnNzsSgLVsCmrNjtk4NdJCGCShrZhQhxTU2tvPdeCUuK9tISHkHGvbcFu0iiF3JycsjMymT+MQczRl/GoZox1NY2ExcXHuyiCREUUoMjRIh7//3TUOPgitIj8IlFWKIigl0k0Uux8fFMmJDOrfWNJFRXsH17SbCLJETQSIAjRAhzuzWbN59kTlEBNreLyd/6fLCLJPpo12gXLquN7JP5bNlShNPpak/zXFBViJFOAhwhQlhBwTmqy2vJPpFPY3Ym4dMygl0k0UcX7QrnomuZVbKfpqpadu06A3gvqCpBjhjpJMARIkRprdm06QTTTx8iprmeid9ZFewiiT7Ky8sjLy+PjO98nrBWJ5nFhbz99gncbt1hQdWWlhby8vKCW1ghBpgEOEKEqCNHqjh54gLzjn9EY2oqcUvnB7tIop9EXTWDppnTmXfsI86fq+Xjj892WFA1LCxMhouLEU8CHCFCkNaa1147QnpFMWNqzzP2wc+hlAp2sUQ/Sv3+amKbLjKz5AAbNx7jmmuuITMzk4yMDDZv3kxOTk6wiyjEgJIAR4gQdPjweY4fqyLnyE6c8fGM+ezNwS6S6GdxN15D06Q05h/9kLIzNXz4YSnx8fGkpaVJcCNCggQ4QoQYo/bmKGmVJUw8f4ZRD92DCg8LdrFEP1NKkfLd+0i6eIErzhzh1VePoLXU0onQIQGOECHm4MFKThyvYsGhHbQkJDD6yyuCXSQxQBJWLqFlYirXHdrOhYo6HI74YBdJiEEjAY4QIcTt1rz00kEmVZ5iYtUZkh6+B0uEzHQ7UimrlQk/up9RF6uZdWo/N954P2+99U6wiyXEoJAAR4gQsn17CWWltSw4uAPnqETGfElqb0a62FuvwzltKgsO7aCh+iJvvHEs2EUSYlBIgCNEiGhqauXVV49wedlRUi+UMvb/rpa+NyFAKUXaE98gtuki2Sfyeeedk5w7dzHYxRJiwEmAI0SI2LjxGA019Szav5XWSakkrro92EUSgyRqQTZqwVyuPfw+EfW1vPjifrTWwS6WEANKAhwhQkBZWR1f//oaIl/7M4n1NaT+/CGUzRbsYolBlPqrb2LXbhbt38qhQ5Xs2XM22EUSYkBJgCPECKe15vnn95KgW1nlPo9aMJfoJVcHu1hikIVNmUjs/Z9hVskBUs+f5q9/3UddXXOwiyXEgJEAR4gRbtu2U5w8Wc39rgoicJP68weDXSQRJGO/dS+usaO5sWATDbWN/PnPhdJUJUYsCXCEGMGqqxt5+eVDpFWcIrnlNP/BGfZUSdNEqLJERZDyy28ypvY81xzZRUHBOT74oDTYxRJiQEiAI8QIkZub22EBRa01a9cW0FrfyPhdL3KPYz9vnC9m6dKl7Ny5M3gFFUEVc8v1RKy4gZzDO0muPsdf/7qPysr6YBdLiH4nAY4QI9SmTSc5cuQ8OYd2crD2DC24AWhpaSEvLy+4hRNBNe4X30SNSuDWPRtx1jfx+9/vwel0eQXJQgxnEuAIMQKdPu1gw4bDpFSVcvWxD1h0yydQFuPjHhYWJjexEGdNiGXCb77PmNrzLNq/ldOnHfztbwd6fJ4EQGI4kXGiQowQDocDh8NBXt57bN7sxNrUyLLdr2MZP5bb1v6KzBMf4HA4eOGFF2Q1aUHU0quJ/dKdzH3mZc6MTuW998DhiCc+3hHsognRL6QGR4gRYOfOnRQWFlJUVMRNN93Ivn17WLp3M/ENtaT84REssdHEx8eTlpYmwY1oN+bxr2PNmsYtH/+LxIsXOH0ajh8/22UfLYfDQUlJifThEsOCBDhCjAB5eXm43UYfm9ZWJ60HNzO7ZD+JD32ByKszg1w6MVSpMDsTnv0x4ZFhTNn6Jy5UvUFp6TGWLPHuiO4ZREtHdTEcSIAjxAiQm5uLUhZAYbVY+UJVJWFXZzLq219sz5OXlyedi4UXe2oy4//4Q47UlKBwAZrm5mY2btzUIZ9nEC0d1cVwIAGOECPA+PHTSUq6jaSYK/nDmPnMG5vK+GceR9mlm53oWdTi+dz84L8RhgUFWCw2zpxJxOFoas+Tm5uLRTqqi2FEAhwhhrmqqgZ+85sPibAl82TkaK7XNlKe/RG25KRgF00MIzf+5Lt8feJsvhk1iW9lfZ6wsHSefHIX9fUtAOTk5JCZmUlGRgabN2+WvlxiyJMAR4hhrK6umaee+oBaRxMPuc+Ro+sZ+4tvSr8b0Su7M+KZmzyRr5QcI6uogLKyOn71q53U1hprVklHdTGcSIAjxDBVX9/CmjW7KC+/yPxjH7LCXUPCA58n7p7lwS6aGKa2bN3Kpw+/S+QNOdxUsIkZJQcoLa3lF7/YQVVVQ7CLJ0RApIFeiGGirc9DXl4eDQ1OnnxyF6WltUw/fZDc/VuJXrGEUT/4anALKYY9FWZn3J9+xNnPfYfb3n8TgIPM5Oc/38Ff//oa48fHBrmEQvhHanCEGGbq61t46qldlJQ4mFp6lGV7NhKRk8XYp7/fPluxEH1hiQxn/PM/JfLaLG7bs5E5J/KpqWniiSe2c+BARbCLJ4Rf5NtQiGHC4XBQXHyGBx74X4qLa5h87gR37H6NiOzpjP/Lz7FEhAe7iGIEscREMf6vvyD65mu5ae8mrj6yi6ZGJ08//SFbthShtQ52EYXolgQ4QgwR3a3z0zbJ2qlTJ1m37ptYDm7mzg9fIWLmZYz/2y+wxEQNbmFFSLBEhDPuTz8m5q4bWXRgG58ofAflauXFF/fzwgv7cDpdwS6iEF2SAEeIYeCllzbidmtA43Y5iSp4lYhpGaT841dY46VPhBg4ym5j7G/+k4SH7iHzRD6f/eCfRLQ08t57p/jZz3ZQUVEf7CIK4ZMEOEIMEV2t8/P++6cpKooHcxK2cBSLMrNJeeXXWEfFB6WsIrQoi4WkH3yVsb/5ARPOl7J6+18YVVvF6dMOfvKTbezeXRbsIgrhRUk7au/NnTtX7969O9jFECPAzp07ue6663C73URGRrJ582auvvoaNmw4zFtvHQetaX7pV4xuPsWinAXc9uozWKIigl1sEYKaPtzH2VXfx3mxkTdn38DBtJkAXHNNKp/+9CyiouxBLqEINUqpPVrruZ23yzBxIYaAzuv8vPnmO7z/vubo0SpsrU5u3/sWU61utqeksWzjs6gwuYmI4IiYP5uJW/5E+VcfY9muN8ioPsNbM5ewa9cZDh8+zz33ZDFr1thgF1MIaaISYijwXOfHbrdz/HgsR49WEd14kVW7/s7UkkOMevTfWXV0qwQ3Iuhs48eQsv5JEh5excwTe/nKzr+QXH2Ompomnn76A557bm/7Eg+euutIL0R/kxocIYaAnJwcZs/O4uxZJzk59xIbO4W0ylPcWfAm4a4Wktf9hOhbrg92MYVop2w2kr7/FSJzsrA+8FNWbf0z61Qi69QYYDkFBee4887pLFgwEaUUYPQzczgc7Ny5U5Z7EANOanCEGAJOnaqhpiYTqzWH5LGXc93RnXx6x9+JTk5gwpv/I8GNGLKiFs9n4nvPEXvXTWQ2FXFD3bu0HH+f+voWnn9+Lz/72Q5Onappn+qgqKiIpUuXenWmF6K/SQ2OEEHkdLrYuPEY//rXcW6++ZPENNZx58frGXfqODGfvJExv/yWzHEjhjxrQiwnv7CEz/3uEdzaTdi7P+fRC5+mNPtOioqq+e//fo/z59/u0M8sLy9PanHEgJIAR4ggOXCgghdf3G/MI6I1s0oPcfP+d7FpF6N/9W1i77m9vWpfiKEuLy+PVm0EME6lOX9sJ/+n1sHb0xZyYMJ0XK40wAq4CAsLk744YsBJgCPEIGn7Ql+//k3+/vcDfPzxWQCimuq548i7TDxxiPB5sxj79PcIm5IWxJIKEbi2jvJut5uwiAiW/ea/iXlhC7d9+DoL0g7wesa1bE+6jZaWs9xyy2c5f34U9fUtREeHBbvoYoSSeXD6QObBEYHIyrqKc+eauf761SQlXQ5ac1XpfnIPbsPmdDLqe18m/mt3o6zWYBdViF7Jzs7G4XDwwgsvkJOTg3a5qPvLG1x44hlcFRfYbovit4xjzvK7AIiIsJGbm84NN0wmNlbWUhO909U8OBLg9IEEOMIfTqeL3/72ZR5++LNo7cZqtbNq0cN8o/oMcadPEZGTxZhf/AdhV2QEu6hC9ElbLWVeXl6H7e76Rmr+52/UPP0X3I3NnJx5FZsmXEltlDETt91u5brr0liyJIOxY6MHudRiuJMAZwBIgCO643S62LnzDG++eYzNm5/jo4/+DGgsKB6OnsTX0zJJeux+Yu66SfraiJDQWllNzf9bh2PdK2i3pnhGNpvGZ1MTk9ieZ/bsZJYuzWDatNHyuRB+kQBnAEiAI3xpbm5l27ZTbNp0EoejCYCq0kJeeeMRNG7sWHh51QPc9PSPsMbFBLm0Qgy+1rIKap7+C7V/fg13SytlM+awaexsKhKS2/OkpMSycOEk5s+fIP10RLckwBkAEuAIT9XVjWzbdoq8vGIaGpwA2FxOri0/yLwDO9h7oYyXLLV8/Q9Pcv1ddwS5tEIEX2t5FTW/e5Hata+gGxrZZwvjr4wh8fbPopUxTZvNZiE7ezwLFkyUWh3hkwQ4A0ACHKG15tixC2zZUkRBwTncbuPzFOZsZmHlAeYc/hBLTS2Ri+byvdMfcypSefVPECLUuWrqqHvhdV569AkONzq4aswk9Owb+DDpchrDL80DlZQUxdVXT2DevAmkpMQGscRiKJEAZwBIgBO66uqa+fDDUrZvL6GsrK59e1RTPUuqDjJ9/weo+gYiF88n8aF7iLx2ThBLK8TQt3PnTq677jq02024xcZzsTPIjhpF5bRZbE+8ghNJE9trdcBowpo7N4W5c1NITpam3lAmq4kL0UcLFy6mvj6aL37xEfbvr2ivrUFrJjrOMW77S1zf0ohNKaJvW0jiQ/cQnnVFcAstxDCRl5fXPtOxU2kOr76RxdFpWP/xNnfuK6A1KYkX61y84U4ie/knKSur49VXj/Dqq0dITY0jMzOZn/70IcLDm9i6Nc/nMboa5SVGJglwhOiG0+ni4MFK8vPPcehQDM3N5WzatJXk5GnYW1uY5yhibnE+EadK2Omq5bvWWh7+zf9j4adWBrvoQgwrHSYKDAvjhrs/yeicHJL+62vU/2sHtS+8zvS336HOuY/srWWET1vIBzHp1EbHc+ZMLWfO1HL8eDhO53keeeQ5Vq68kRkzxhAefuk2J4t9hhZpouoDaaIamZqaWtm/v4L8/LPs21dBc3Mr5eWHeeWV7wFu7FYb/9+8u1haWgmNTdinZXBk0Qw+8dMf4Ha7iYyMZPPmzfIFKkSAOk8U6KljE5aV52JncqU9jsbJkzk84QpeudjInzf9FDDmmlq27MeMHz+djIxEpk0bTWNjEZ/73G3yGR2BpIlKhLyuvjzdbk1JiYODBys5cKCCkyerLzU/AWjNxeIPULjQgNvl5NiR3ay490vE3v0JIq7J5IUnnpCFBIXoo/z8/C7TOjZhwZGv3soNqbO4uGEz2e+9ya6G01hw4QbcrlbOlhaSnDyNEycucOLEBfLz/9H+uW5ubuGllzZy5ZXzOtTwSBPWyCIBjggJO3fupLCwELfbzdKlS3nxxVdJSJjKkSPnOXToPPX1LR2foDXpF8vJaTrNhGMHKDh9nB1YaMFNWFg4K17+X8bmLmrP3rl6XRYSFKJ/df6MLV25nMScHBIf+DzO0+e4+XfP8vQTP8Cl3diBb505SkbCJo4npLLXPpaU8bMAC+BGKSsnTsTx0EP/IjU1jsmTE5k8OZELF+qpq6uSJqwRQpqo+kCaqIYHp9PF97//GL/85Y8AUMrC3LmfJzv7Ux3ybXl1A9dYHfyfqy4j6chBVFU12G1ELZpL9G2LuOXn/8XZi76rz8EIovLy8sjNzZUvRyEGQE+fsezsbC5W1/D7b3ybWadrady6m9Yz5QC4kxJ5puoc7zY3MDXnk8RMugo85tTp0AxtD+OHP/wTN9ywiIkT40hOjsFiUVLDM0RJE5UY8bKzs6mpcfCLX/yO0aOv4NSpGk6dcnD2bB1nz8YCVsCNxWIjJWU2FreL9KYqrmw5S2rpCZY2fsyHTgdndp9h0k03EL1sEVE35rTPNrzjC8u6PX5OTo4ENkIMoJ4+Y52buLTWtBaX0bh9D43b9vBv2z/mK+dr4ON3cRd/TG1aOqfjx3PAMoq9pXsBN6BpbXWyYcO/OHXKmGvHbreSmhpHcbGV5uZz/OUvG7nllsUkJETIxINDmAQ4YlhyudxUVNRz9uxFyspuCj8PAAAgAElEQVTq2L59B3v37kNrN5/5zHKWLfsxycnT2vMnJ08jZdQtJDhP8bX5OSx1HCd8z1vQ1AxKsX/yKL5Qu59W7SZCV7D5q2skWBFimFNKYc+YgD1jAnH3LEdrTcuhkzTtKqRp937CPjpAQkEBs4HL3fXcg8KJxmaxMjs2BaurFZfVhtPpYteunZw6tRVws2rVSpYt+zFpabMYNy6GceNiGD8+huTkGMaMiSIpKYqoKHuwX37IkwBHDFlut6a6upHKygZuv30ltbXV3HffN4mMnEx5+cUOHYHz87egtfHry+02OhjOjxvNFThIra8k4ewZvmOvBUs87DtM2KzLiLzndiKuySTy+qv4+//8BucHrwDSSViIkUopRfiMKYTPmEL8F42pHForq2nevZ8lHx3g72+/w3sH9jJfR3Fl4Q44sAtnagqOseN5+vQBwAWA291KWdk+kpOnmTXFNV7HioqyM2ZMNKNHRzF6dBRjxkTx1a9+hoaGSp57bi2LFl0/mC89JEkfHEAplQakA8Va6xJ/nyd9cPqmubmVmpomqqubqK5ubP9bVdVIZWU9VVWNuFzuDm3jbcM/PWtnwluasFTk85s3f4ZbuwmzWHkuMYsrlTHFuyUuhvCsy4mYN5uIq2cTMW8WltjoDmVpG4IqQ0iFCG3a7aa1uIzmfcdo3n+Mln3HaN53lI9Ki1nl2I8TN3Zl4ZmZNzN50kwqo0ZRYonltDWWmqgEtMXic7+dv8c++cknmDEjm8TESBISIkhMjDD/RhIXF05sbBixseHYbL7350t3w+z7w0Dvv7ekD44PSqk4YB2QD+QB9ymlsoF7tda1wSzbcOV0uqira6GurpmLF1va/9321+Fobg9mGhud7c/75z//SEvLWZYs+VSH4AWgrGwfbW3j2t1K7OmtrA6rI66qgvDSMqiqBmBB3Cw+tDRy/ew5LFiSS3jmFYTPmYYtPaXHdvKcnBy2b98unYSFCHHKYsE+ORX75FRi7ljcvj21vIqN/3yFvHc2c3VkElkNCufRo4ypuMAMM89uZy1bXLVcNzWLyanTqIqIp9wawxl3BPtOf0zb95jb3UpRUT4JCZd1WOrFl6goO7GxlwKe2NgwMwAKJyYmjOhoO1FRdg4ezO8wUtTXj7S+BCidR6IOhx+BIR3gAFsxgplC8//blFKZ5vbs/jxQsEfY+Htha61pbXXT2NhKQ4OThgYnjY1Odu3axQcfbGf69HlMmjSLxsa2tFbq61s4fLiAY8f2MHbsTK8ABYxfL2Vl+0hJme2VXl5+mKqqNwA3b7y+l2/f8hALkpJJanQQ46jmYN057jXbxu0alp84zdiqFsKuSCfsxmsIm5aB/fJ0VkzL4K4JY1Fd/ILqiXQSFkJ0xZacxOL7v8ji+7/YYbvLUYfzWAnb33iTex77v7i0m3V7T/PnC+eZU6/ag5+Zzlo+bvseU4ovh7mZVFVAtT2aCiKoJIJ1b6+npuUcS5be3f492fY9XF7e/feo5zw/TU3NfP/7f+TGG1uJijICoNLSg2Y/RReLFy/h17/+K3PnXk14uJWICBvh4TYiIi49Otccec5DNFya8UM2wFFKrcJokir03K61LlRKFSulVmmtn/N3f90FMP40f3T3/Lagw+l0m39dXv9fvnwZtbUX+MlPfsn06dnt6S0tLvbu/aj9wl60aDEPPfRbJkyYQXOzi+bmVlpaXO3/bm520bnZsqcmop7SK84e4NXX/hONC7vVzo9vvp9rEscS01BHZJ2DZw7taJ+gS7taaHn3b0yLmoiKisSePp6F8+fycs5sdjnKyc3N5boVy7D1IZARQoj+Yo2PxTp3Jh9tehWnvjQR4dF/u42V33gQ56kyWk+VcWPJWV7e8T7bD+zlals8WTUXcR3dBOb37cfOWiod+2nBzVuv5vOnmTcxfdxkmiKjqQ+L4qOacp559w+4tAub1c4nb/oBCRPmtDeJpaTMpm2eH4vFRnz8tA59g/LzN5n9FI0A5Y9/fJk9e6wdXotnAJWSMqM9+ImIsHH2bAJKWdHa2H9t7Xiee24vdruFsDArYWFWjh8vZP/+D5k7N4crr5yP3W5st9st2O1WrFaFzWZpf1itnv820q688spuf4wHUlkQsgEOsBrY0kVavpnebYBTU9PEP/95kEOH8nnkkXvR2kVYWDjf/vbvmTw5E5fLjcul2bjx+fbIt6mpmccfX0durguXS+NyuSku3s/atQ+itQubLZy77/4ZycnT2oMXt1v3WANy+PBHgJsvf/kurwAjP39j+4Xd2uokLy+P7OwxXvvoav+eTURudysXTu9h3ugUYpWTWFrZVLq9fZZfXE7SD23g/uppWGvrwFHL78oPd5gFuCJvAxNiJmFNTsKWMobcrGx+U34Ip9tFmM3Osl//mEm334p1TGJ709It5kMIIYai3NxcIiMjaWlpaZ/s0xITRfjMywifeRkAt37t09zq8RztbMVVUUVrWSXP//opmv9ciAacuCmklutaG3AVleI6X82btcVobXRy1i4nqVvX8u9RE9FRkeiYaFzR0dw15zZ2XawkM3kyU60XaajeR70ljIsqjMj4ZPKtNlxuF1aLjUljrkC53e0BUlc/VBsa2roSpLJ8+U/b7xMXLiSxY8elLquez1+3zvuHblueru4zbekFBcb9ZuHCxXzqU0+QljYLq1Vht1spLT3IM888gNYu7PZw7r//aaZMyezynIRygJMLrOkirQB4rKcdVNSX89s9v6b4/fz2C6/F2cLbb29m9lVRFCduBsCRcA5ltaBdbixWK+HhUzhcfJqSxK0AFJ+49HyXy8mxY3uwxY/iTMIO4/lnzvHx66+hXW6sNjvLbvsJcRPGUBb3gfH8Ix/TuXd/TGoi52L3oLRGTa3Bkm/B7XJjtVpZNH4io+37OBZzEBtuKs9U8Nrr7+J2acKtNn638HMkjLOyJ/4MFqeTWaOryLeCywVhwDdOHCLcVcSe9CaqgIjIeqwWhcttVL3mRsVzbHIzBeOcWKISqS+fCf9TAm5NWFg4d7z4W0pnRFFQfqny7Gt3JHL84+N8/97vk5OTw+YTmzlw/ECH99tutfPvV/87AG8dfYuj5492SI8Oi+aLc43q49cOv0ZxdXGH9ISIBO7JvgeAlw+8TGltaYf0sdFj+XTmpwH4W+HfqKyv7JA+IW4CK2caIy9eKHiBmqaOIycmJUxi2TRjrpy1e9bS4GzokD41aSo3Tb0JgP/96H9xupwd0qePnc7iyUab/293/ZbOssZnsWDSAppbm/nTnj95pc+dMJd5qfOob6nn+fznvdJz0nLIGp9FTWMNLxa+6JW+MGMhM8bOoLK+kpf3v+yVvmTKEqaOnkpZbRmvHX7NK/3mqTeTnphOcXUxbx17yyv99mm3kxKXwvGq47x74l2v9JUzVzImegyHKg6x/dR2r/RPzfoUCZEJFJ4t5IMzH3ilfy7rc0SHRbOndA/5Zd5T/q+6chVh1jB2lexif/l+r/Qvz/syANuLt3Pk/JEOaTaLjXuvvBeALSe3UHShqEN6pD2Sz2Z9FoC3j73NGceZDulxEXHcNesuAN488ibnLp7rkJ4UlcTy6csBePXQq1Q1VHVIHxczjluuMEL8f+7/J7XNHbsIToyfyA2X3QDA3/f93evay0jMYFGGMfP2CwUv4HR3vPYuH30516ZdC8C6j9fR2cyxM5mbOpcWVwsv7vW+drLGZ5E1PouGlgZe2v+SV/pVE65iZvJMaptqeeXQK17pV0+8mstHX875+vP86+i/vNIXTFpAxqgMztWd453j73il507OJTU+lTOOM2wt2uqVvnTKUsbFjqOouoj3T73vlf6Jyz9BUlQSx84f46MzH3mlL5u2jLiIOA5VHCL/rPe1tWL6CnJycvj933/P62+/zoy5MyiKKqJor3Gd3DXrLsKsYXxc9jFHKo94Pf+z8z7Lzfd/kSdeeh6n04nVZiPyOzexI+tybBYbn5z5SVZs2syaW24G7cZqtxF+/3XkjU0kvMHFjRUTcDvqiFZFzHTH4Gws4UDDMWhxEtViYdHhSBYBiZdPYU+zg6mJsWQ0/RNO/pO41jCuLUvid3WnLv0QdbfQfOZZMsbMILo1lml16TiVlY/GneLyCXZa1VFaOY4TRXhLPGMdUzh2Yidt9yGX28nR86/jnnKBcNcYRjVOpbz8MK++9l20243FZiPn7s+TmJJKVMsYEpomA3CkamP7PlpdLeSffgX3aDvxzWm4cbH98D/a75XO1hbe2vMXsl2tXu9nm5AMcMxRUwDeY/s8tiul0robVdVireNU4maaZzWi3lfoVo3VamF+ymSSVSXbzACHREj52ngaTzSyKOk6PhWTwAVrMdsTjQ9q86wmj+cr7hkTT6y7kJ+Y6Rfyq9FmDZB2tZJ+eAM5kWn8Z/qHADR5PN+u4Dtlx2nad4IfLjO/RJNgfGIyjSca+dbJcdz9/jbend5A3u3Gy6/ee2ntJaerlUMHPmLSuAn8dcpJ4/nTYOzk8TSebGTN5au4KXsxf3bv5M9V/2h/L8ZmGunP/8fz3Lb0Np7a8RR/2vlrIzEdxn3NSP/Hd//B9QuX8t9b/ptn9jzT8Q29jPYqx80nNvO3wr91SI62R7cHOG8efdPrJjs2emx7gPPqwVd592THm2h6Ynp7gPPSvpe8bpIzk2e2Bzgv7H2BA+UdA6yrU69uD3D+tOdPXgHUkslL2gOcP3z4ByrqKzqk3z7t9vYA5+n3n6beWd8h/dOZn24PcH61/Vd09qWrvsSCSQtwup388r1feqU/kPMA81LncbHlIr947xde6d9b9D2yxmdR3VjtMz0+Ip4ZY2dwru4cP3/v517p4+PGM3X0VEpqSvj5Nu/0y5IuIz0xnRMXTvhMzxqXRUpcCgcrDvKzbT/zSs9Jy2FM9BgKzhbwxNYnvNJvmHIDCZEJfHjmQ5/py6cvJzosmu3F2/l127Xn4TNZnyHMGsa7J971vva4FOBsPLrR57XXFuC8cvAVn9deW4Dzj33/8HnttQU4z+c/7/Paawtw/rj7jz6vvbYA57cf/NbntdcW4KzZvsbntdcW4Pxs6898XnttAc7j7z5OZ1+66kvtAc5j73r/9nsg5wGyxmdR11LnM/17i77HzOSZVDVU8cPNP/RK//GNP+by0Zdztu4sj25+1Ct9zW1ryBiVQXF1sc/0P8T9gdT4VI6cP8Ij7zzilT5l1BTGxY5j37l9PtMzx2WSFJXE7tLd/Nc7/+WVnpOWQ1xEHDtO7eCnW3/qlb50ylKiwqK4kHiB3Wm72V2xGzZdSl8+fTlh1jD+deRfPq+9z2Z9lpycHO7+6d28/vbrRE6OZF35OnjbuPbumnUX1910A3f97C42vbuJyMmRvJi8E4CxY8fyhUeNH0QbX/4K757sOLI3PXYiX1j8LO6aOg7u+S4H6g9zgFbAAcA011huOb+YJceP8OTrB9EuDTZF4TU1HE3/mMzSSG7deALcbp74Sjmlo1wd9n/18XC+8W4SU5215NkU2qVRNnDMOc6B8WdYfCiSb28az//Ul7S3JLhdrRysfpXE7ERuLhrH/Qeno61WXs86ivrAuJcpG9RmHSXJ8jp3l19Fvc3NRh/p0bauGmJCdJi4UmohRkfiRVrrbYGmt5ltj9UbEuYARvvpB04HV9vjudIeF3CZfD5fKVS4nXxdzxfKPsKp3dgtVv6aeRNzx6SiwsNQ4XZUeBh7asrZef4M106ayvz0qcb2MDuW6ChUVASW6EhUdKTxNyoCS1REe9oHB/dx050r2qtWB7J3vNYapZRXP582bU1SvtI1GosyqlPd5gel876tFqNN2eV2eaUDfqe3ur1/FShUe3rn2pe2stssNr/SW1wtXukWZfErXWvtM91qsfqV7tZun+XzTG9p9X6+zWrDZjGquH3t3261Y7PYaHW3+tx/mDUMq8VKq7vV5/7DbeFYLVacLqfP/UfaI7EoCy2uFp/7b0tvbm32qqEA40ahlPKZrrUmNtyYtbbJ2eTz+W3pjc5Gn9dHW3pDSwMu7X19taXXt9R7XX8Wi4WYMGPG7LrmOq/r22qx+p3uaHJ4fX7sVjvRYcbUCDWN3r/rPNOrG6u90sOt4USFReHWbp/Pj7RHEmmPxOV24WhydJne6m71mR5tjybCHoHT5fSZHhseS7gtnBZXC7VN3gNc29KbW5upa/YelRQXEUeYNYwmZxMXWy56pcdHxGO32ml0NvpMT4xMxGaxUd9ST31LvVd6UlQSVouViy0XaWhp8EofHT0ai7JQ11znVbsGkByTDBjnrtHZ2CFNKdWeXtNYQ1NrU4d0i7IwNmYsABcaLtDsau6QbrPYGBNtdEk4X3/e67Nlt9rb0ze+u5H3tr5HzvU5zJ1vjLoOs4aRFJUEzlbOVp2mtbER3dyCbmpGNzsJc0Jiazi6qZmNH29jZ8Fe5k25jDmpadDUQlizm/hGCx8WHefOv/+OVpcLm8XK72+9k8xRo4loVsQ1KLSzlbPWWgorz7Gnspwr4xKZFRFPZIObuIsal7OF8vAm9jc4yG+sJTsyjlkRsUQ3W8gufd/nMHEJcAIMcJRSXwW+av73CsC7vrH3RgPnu0iLBmKBOsD7E9Z3A73/4aq7cyIGn5yPoUfOydAylM/HQN1nJmmtx3TeGJJNVH2htf4D8IeB2LdSarevKFQEj5yToUXOx9Aj52RokfNxiYyzFUIIIcSIE6oBTledi3ubTwghhBBDSEgGOB6T+6V3kSW9U77BMiBNX6JP5JwMLXI+hh45J0OLnA9TSHYyBlBKbQG2aK29xkQqpR4BFmutF3s/UwghhBBDXUjW4JjWAiu7SFtppgshhBBiGArZAKdtnSlzSHi7tv93XofKXHnci1Iqrqu07iilMpVSCz0mHexT3v4u31AXjPPRm2MqpdL8Pc/D3WCfE6XUKqXU8mCVb6gbwPPR9dz4l/L6fd3LZ2TQzknI3UdCtokK2k/mOoy1p/Iwlm/IxlhhvLZT3i1AgpmvbSasbHPbHZ3zd3PMTIxlIPKBRGAFUGwes6QPefulfMNFkM6H38cM5NoaKQb7nJhNyT0tqVKjtU7sz/INF/14PpYDD2MsYVNt7mMOxvnoPE9YIN+p8hkxDPQ5Cd37iNY65B9AGrAQSOsmz3qME67NRxHwSC+O80inbXEe+07rTd7+Kt9wegz2+Qj0mBhfJpmdtmUC+cF+70bKOcFYLPeRbh5rgQf6s3zD6dFP52Oh53vosf0Bc5+dr3G/r3v5jAz8OQn1+0jQCzBcHv1xkru5GcaZF9Pa3uTtr/INp8dgn49AjgmsAtZ3kbYeWBXs928knJOejufji10+I4Hvo6sbYdv5WO+xze/rXj4jg3ZOQvo+ErJ9cIJkpVmt3oE2qv3yMKoOe5NX9M5AvcerMX6d+pJvpgvf+uWcKKVWAc/2a8lCU7GvjfpSU0WCx+ZArnv5jPResa+NXZyTkL6PSIAzuNIx2k274nlhBpJX9E46A/Me52K0jftSYKYL39Lx85xoH1M8QHufgxrdqX+BCJzW+mGtdWLn99JjcMZ6j825+H/dB5JXeAjwnKQTwvcRWYsqQGbHuDkYX6CBTgSY1U1aAh0/8IHk7a/yDTuDeD78OqbHCIWuZsGuacs3Um/AwTgnnazoKvjph/INOwP0eh8GCrTWvzaP4fd133lbd3nlMxKQDufEFNL3EanBCYBS6gHgPvO/c5RS6wMZOqe1LvH1gTU/9HPwiLwDydtf5RtuBvN8BHDMdD8P72++YSUY58TH8Z8dqPINN/39es1hxusxgpBFHknpfu4iPcC8I84gnpOQv49IDY7/MoAHPdo5tymlALYqpRbpvg2fewwj8u7yV6cfeQeyfENRMM5HqL3HgQrqZ8T8Es7u9At2sMo3FPXb6zWbP3LN/+YDxSPw/RoMQ+WchMZ3XLB7OQ/3B0ZP9F73PMcY8ldNp+GSfc3bX+Ubbo/BPB++jmk+XwMLu9l/l+kj8TFY5wRjaHjAo2/kM9KrfazFGKYf53GO/Lru5TMyOOekm3whcx+RJqq+y6PrJR+65THR1SLdQztnIHn7q3zDVB6DcD7665ghIo/BOSerzWMFKo/QOn959P31PohRe/BUXwsjgEE6J6H2HScBTv+YE+gTzAvtFYzZIf0JbvzK21/lG+YG9Hz0cMyuOk525m++kWKgPyOZQLrufadU+YwEQF8aZnyf2Z8jkOtePiO+9fc56SAU7yMS4PhBKZVvTmHdnx7DaOv050LrNu8AlW/ICsb58PeYHs9P7yJLeqd8I8IQ+Iy0TT/vk3xGerWPOLOD6ZoesqYHct3LZ6RP+/D7nPjYFnL3EQlw/JNO11+ebet2+M2ceGlt5wvN14RMfubt1/INA+kM/vkI5Jh5dP/lHVD5hol0gvQZMS3u5vj9Xr5hIJ2+v945GIHjfT3kaztOHv5f94HkHSnSGfxzAoTwfSTYnYCGwwNY08X2NIzOV6s6bc/Ex1ohZtpyuujchffU8n7lDbR8w/0RjPMRyDExpqH3uZ4OxmiHEXU+gnVOOm0vArb0V/mG+6M/zgfGdP5b8NHZl0tT/W/x2Ob3dS+fkcE5J+b2kL2PhPRq4v4y2/dXa60f7rR9PcZESKs7ba/GiHgf1B5DVs1hfQ/T9RTli7XWi3uRN6DyDXdBOh+BHjPfPN42j20Lgae01tkBveBhIBjnpNP+NJDnK6035Rvu+vF8rALQWj/XKf9ajJqERdqjViCQ614+I+3bB+ychPp9RAIcP5kn/ymM6BmMHuXrtY95Obr58LddsF15tG1/geQNtHwjwWCfj14cs220Qj5G1W4ukA3cq4fbXBJ+CsY56fS8PK11lyM95DMS+Pkw05ZjzpKLMby4LYj06s8RyHUvnxFggM9JqN9HJMAJkBkR4/mrYygZ6uXrb8F4vYEc0xzNkI4xCdeInHa+syCdkzSMX5k93hjlM9Lr/WRi3Cx7vJYDue7lM9Kn/fh9TgLc74j4jEiAI4QQQogRR0ZRCSGEEGLEkQBHCCGEECOOBDhCCCGEGHEkwBFCCCHEiCMBjhAhrpvZgUUP5L0bOpRSaUqpR5RSD/hai0mEHglwhBA+J8cTfpH3bggw54VJN+dr2QC80jYhnghdtmAXQIhQYX4J53nO1dJpcbuCzrOIhqqR9L4opVZ1nnW2F/sYMe9Hd5RSawOdMdecMLCmbc4WrXWJUuoOYK9SaoPWujZU3j/RkQQ4QgwC89dksY+J6HKBRea/awa1UIMkwBWK22ZifdT8/xyM2VSHsw1KqTV9vKnm4ud1Yt7w55j/LegUUMcN1VmCzR8Ac3rM6G0OsFUpldU2i68Z5BSbadsYWdeT8JMEOEIMMHO20fSufsX3NFuoOWV7OsZNDowbXAHGonqPd8obB2zF4waHsYhen2oQ+qKLtaO2dLVulPmcbWY+GOY3JLMGYb1S6gHPNYV6sZ+erpNVGNP3g7H0QTWwWilVBDxpBjbr6MX7qZRag7FsQLq5qdvryrzmt2LMsluDEbj2dA2uBNYGWjazLI/ivRJ2etu2kXQ9Cf9JgCPEwHsKuKO3T26rsjdvVOlAVlfTsps30zXAanyvFbTQx9MSutheMFR/7QdDX947rfU2pdTDZpNJvy5H4LGmUzqdFq/0SH/MrElb0ZtjmLVPD7ddgz0thqm1LlRKZZnlusPP62gFl2paAilbLdA50F+IcQ5CYukH4ZsEOEIMIPNX9Za+Bgr+rtdjfrHXdFM7kutjW0IX24sBCXAuyfWxLZD3bg3wGEbw2Z+2mn8X+brOzKD3UY98fbEWI1jyp1/RHIzFHP1ZH2w5/bue0mPAvf20LzFMSYAjxMBaTf980eaaf/O6yuBxk+iyKaOLVYsXD9fVggdTX987sxbnqf7sB2MOU5+DUavX5T7NIOdB+h7kPIsRPKwEegxwAriuets85cWswXxQam+EBDhCDBCz1iWhn75o22pkvDrsmk0Q9wHPDsUmJWkW6yAPoymmz32izOvrMYzzXthTfjPAKu7LMc3Ou3nACqVUWlfXtnlNBqJXzVM+jrscWOvP+yFGPglwhBg4uXRT49KLfdF5fx4dmHvdeXUQ5PrYFqrNYlvwr/bDH/eZf9cH8Jy8fjjuWoxztwLo6rq7D6O2p0f91TzlsZ9Cj22ZEuyELglwRMgzf20+BGQARVrrxz22ASRi9H+516zqz+RSZ80MjD4vvoYAL8ZHjUsvyuez/43Zv6dGa/1qX4/hZzniMDpMp/uRfU1buYZas1hvX0c/KTCP3R/aavUKAnhOl81A5vWUjTH6KhHjtXsFHVrr55RST2GM2OoqwAmk5rLH5imP2qoas3wAG9qCF/Mz2Tm4WT5Ynw0xNEmAI4Txa/NJM3jRZhV8h/4DZrv+OrOzZnqntPwuhgCn4z10tTdyzb955vHabtD3YVTr+/0l3sWcNHO62P6gxw0kDngFc3g6RmAHUGT+7RzM5flbpsHUl9fR2/fOk9nEkx5wwX3Lbdunv0/w1T/L4z1Z2xaomwHFK0qpe7uoAdkA3KeUWuhj1FYmgV333TZPmTUzD+N9Pa5TSt2LURu4FaPZ0/OpBQTw2RAjkNZaHvII6QfwiPk3DdDAel95zLQHfKRtwRgp1Xl7NZDZw7G1H+Vbax57lVnGVUCmua1okN6jNUCc5/89/p0JrApwf17vVxf5FvqbNxivo5dl6PG68Oc6Mc9/j9ePn+/JWh/bVwH5XTyn7frz9bxHAjj28q6O4XH+def3C8g3t6cF+Fr79XqSx9B+SA2OCGnmL9Vi87+55t8HfWTNwKgC91Uln47vGosE3T/t/7ke/56jzeG5SqkCjBqEAa2KNzsDr9UdO/8meJaJ/qmpCoh57u7DGKlWQ8e+KIvpNBHiEHodBZ2OGzTme/gQl2ZJ9pSHUUvi1ZlYG/PcFGN0Nn6w03uaGMrBl+wAAAVsSURBVEARumye8qhZetLH5+hRsxwyUkp0SQIcEdLML8i2Dp+L6bqzYy4+ghiP/jF97mvji2f/G4wRRp5f9GswJlJ7mAGsite+myCKPDYtxndQ2J0+L0thnqfHlVKr8Z5V93Gl1FrPtY0G6HUEUx6Q211HWrNfja95d9aa71eu+f9cpVSuj3xgXH++PhNrMJpK20eFmccLZLh3d81TD2EEgl77G8iAXowcEuAIcUkugQcxbZ2NNwxgmcBYpLPDTUxf6uyZ292Q3QGwmo61Jek6wKHdWut+mS7f49zk+Uh+EHAopR7t4r3p8+sIsi0Y18ccwGeAYwYxz3VawiPe43Wmm/m66vDdXUfwZzECnNVc+pGQrv1cFsSP0VOr6dRxWIhAWIJdACGGgh6CmFzzb56PtNUYozl83hh7MR9IZ13Of2N61vw7mKsjr+hUG5I7iMfuLJcubpIe56Sr5QmC9Tr6q3nqWfNvj8Gi+V7UePy7Ta9r0sz9bMAMsM3PUCD762n0VDqBjRATogMJcIQw5Jp/83yk+Wy6Mr/Q52DWAphf8pkeWQro3erI/pYLjGYCuDQnyoAymyCKfWxPG4zj+7CYnkdseQUUQX4dc+iHG7d5PT6K0Q8ms6f8XciD9ua63mgLUO7DCCSfDeC5K+i55jM/8CIJYZAARwhDwP1v8G6eWkHHm2af+pn4s/6UuX0DxhDZVX05np86N+u0SR+EY/uSSxe1Wx61Z76CiaC+jv5qCjOblgowOgP3VFvoFeiZzT8b6KIGUCm1qrugz+wLU4Pxfmb4+7r8nNyvuId9PODPsUTokgBHCEMugfe/ScDoG9P2pZ7Q6Qu+rY9EX8qEr3J10vYr97E+HKtH5q/83C7K0y99agLRQ/8buPT+dQhwgvk6zJFcvo7bF4swgoG9XSx/0VZj1dVx78UYjdchQDYDJn8m7HuWwDva+7P21Bp8nA+lVJwZ3OQFcDwRgqSTsQh55hd5Or6/oNuamPJ8pG0AVpo3lVzgyU7pefSib4xSaj0dlzJYYU4Ot77zMHVzkrm2MqYrpYowRsgMxCzBq/EeyQXG60wfgOP1JJfuawFWYgSgndOD+Trm0M8j7sygeqUZoDyllErAuDbbZiROwBw1ZaZ5PV8ptQh4SCm1FmNkWQ3GLNn+LAGyFrgvwJFNPa49pbX+tVIqwfw8tDXF5pple3aYdQgXQaC0MfmRECGth6G23aXFYcxN43MFb6VUkdY6w1eama611qqr9KGkrQmk842lq+39dMyFwGNa68U+0taax/UaBm3W7pzCWGW7sFPaoL8Oj2OsBx4NdGRQINdJ2zVp/ndQFi/t7jPiI+9yjHOa7Wf+9tfT1efMX91dT2LkkRocIWjvi9CbtFqguy/dDSNlTZyubpRB/CWdS9e1AOsw1g7ztVxCUF5HW03hQA979uOaHIhjBvKa/Gme8tz3oL8eMTJIHxwhBtYaBncId0joqv+N2T9jPZcmshtKHuJSU0so82f0lBB9JjU4QgwgbSyuuMXXooSid5RSj2Cseg3Ggo9tSW1LBATcBDTQzNqb7AHqGzVs+Dl6Soh+IQGOEANMa922bMCg9IcY6YZpkPAYw2sZiIESUPOUEH0hnYyFGATmL/j7fIyC0lxqZinQWktzFu2jw8AYAVQznDuFetRa9LpWaaRcJ0qpaoyO34NagzOSrifhPwlwhBgkvkbpdJq3pGaoNa0Ey0h6X/pjnbCR8n4M8pppnscdEe+fCIwEOEIIIYQYcWQUlRBCCCFGHAlwhBBCCDHiSIAjhBBCiBFHAhwhhBBCjDgS4AghhBBixJEARwghhBAjjgQ4QgghhBhxJMARQgghxIjz/wNbo/iNhzqCPgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig,ax = plt.subplots(figsize=(8,8))\n",
    "lower, upper = obs.limits\n",
    "low = lower[-1][0]\n",
    "high = upper[0][0]\n",
    "bin_width = 0.002\n",
    "bins = int(float(high - low)/bin_width)\n",
    "counts, bin_edges = np.histogram(data_np, bins, range=(low,high))\n",
    "bin_centres = (bin_edges[:-1] + bin_edges[1:])/2.\n",
    "err = np.sqrt(counts)\n",
    "plt.errorbar(bin_centres, counts, yerr=err, fmt='o', markersize=3, color='black')\n",
    "x_plot = np.linspace(low, high, num=1000)\n",
    "y_plot_tot = zfit.run(pdf.pdf(x_plot, norm_range=obs))\n",
    "plt.plot(x_plot, y_plot_tot*len(data_np)/bins*obs.area(), color='navy', linewidth=2.5, alpha=0.6)\n",
    "y_plot_sig = zfit.run(pdf_sig.pdf(x_plot, norm_range=obs))\n",
    "plt.plot(x_plot,y_plot_sig*params[n_sig]['value']/bins*obs.area(), color='crimson')\n",
    "y_plot_bkg = zfit.run(pdf_bkg.pdf(x_plot, norm_range=obs))\n",
    "plt.plot(x_plot,y_plot_bkg*params[n_bkg]['value']/bins*obs.area(), color='forestgreen', linestyle='dashed')\n",
    "ax.tick_params(axis='both', which='major', labelsize=25)\n",
    "plt.ylabel(\"Candidates / (%.3f GeV/$c^2$)\" % bin_width,fontsize=25)\n",
    "plt.xlabel(\"$m([K^\\pm \\pi^\\mp]_D \\pi^\\pm)$ [GeV/$c^2$]\",fontsize=25)\n",
    "plt.xlim(low,high)\n",
    "ymin, ymax = plt.ylim()\n",
    "plt.ylim(0,1.05*ymax)\n",
    "plt.tight_layout()\n",
    "fig.savefig(loc.PLOTS+f\"/{mode}_B_M_fit.pdf\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
